(()=>{let t;var e=function(t){var e,r=Object.prototype,i=r.hasOwnProperty,n=Object.defineProperty||function(t,e,r){t[e]=r.value},s="function"==typeof Symbol?Symbol:{},a=s.iterator||"@@iterator",o=s.asyncIterator||"@@asyncIterator",l=s.toStringTag||"@@toStringTag";function h(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{h({},"")}catch(t){h=function(t,e,r){return t[e]=r}}function u(t,r,i,s){var a,o,l=Object.create((r&&r.prototype instanceof g?r:g).prototype);return n(l,"_invoke",{value:(a=new C(s||[]),o=p,function(r,n){if(o===d)throw Error("Generator is already running");if(o===m){if("throw"===r)throw n;return{value:e,done:!0}}for(a.method=r,a.arg=n;;){var s=a.delegate;if(s){var l=function t(r,i){var n=i.method,s=r.iterator[n];if(s===e)return i.delegate=null,"throw"===n&&r.iterator.return&&(i.method="return",i.arg=e,t(r,i),"throw"===i.method)||"return"!==n&&(i.method="throw",i.arg=TypeError("The iterator does not provide a '"+n+"' method")),f;var a=c(s,r.iterator,i.arg);if("throw"===a.type)return i.method="throw",i.arg=a.arg,i.delegate=null,f;var o=a.arg;return o?o.done?(i[r.resultName]=o.value,i.next=r.nextLoc,"return"!==i.method&&(i.method="next",i.arg=e),i.delegate=null,f):o:(i.method="throw",i.arg=TypeError("iterator result is not an object"),i.delegate=null,f)}(s,a);if(l){if(l===f)continue;return l}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if(o===p)throw o=m,a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);o=d;var h=c(t,i,a);if("normal"===h.type){if(o=a.done?m:"suspendedYield",h.arg===f)continue;return{value:h.arg,done:a.done}}"throw"===h.type&&(o=m,a.method="throw",a.arg=h.arg)}})}),l}function c(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}t.wrap=u;var p="suspendedStart",d="executing",m="completed",f={};function g(){}function x(){}function y(){}var v={};h(v,a,function(){return this});var _=Object.getPrototypeOf,b=_&&_(_(T([])));b&&b!==r&&i.call(b,a)&&(v=b);var w=y.prototype=g.prototype=Object.create(v);function M(t){["next","throw","return"].forEach(function(e){h(t,e,function(t){return this._invoke(e,t)})})}function S(t,e){var r;n(this,"_invoke",{value:function(n,s){function a(){return new e(function(r,a){!function r(n,s,a,o){var l=c(t[n],t,s);if("throw"===l.type)o(l.arg);else{var h=l.arg,u=h.value;return u&&"object"==typeof u&&i.call(u,"__await")?e.resolve(u.__await).then(function(t){r("next",t,a,o)},function(t){r("throw",t,a,o)}):e.resolve(u).then(function(t){h.value=t,a(h)},function(t){return r("throw",t,a,o)})}}(n,s,r,a)})}return r=r?r.then(a,a):a()}})}function z(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function A(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function C(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(z,this),this.reset(!0)}function T(t){if(null!=t){var r=t[a];if(r)return r.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,s=function r(){for(;++n<t.length;)if(i.call(t,n))return r.value=t[n],r.done=!1,r;return r.value=e,r.done=!0,r};return s.next=s}}throw TypeError(typeof t+" is not iterable")}return x.prototype=y,n(w,"constructor",{value:y,configurable:!0}),n(y,"constructor",{value:x,configurable:!0}),x.displayName=h(y,l,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===x||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,y):(t.__proto__=y,h(t,l,"GeneratorFunction")),t.prototype=Object.create(w),t},t.awrap=function(t){return{__await:t}},M(S.prototype),h(S.prototype,o,function(){return this}),t.AsyncIterator=S,t.async=function(e,r,i,n,s){void 0===s&&(s=Promise);var a=new S(u(e,r,i,n),s);return t.isGeneratorFunction(r)?a:a.next().then(function(t){return t.done?t.value:a.next()})},M(w),h(w,l,"Generator"),h(w,a,function(){return this}),h(w,"toString",function(){return"[object Generator]"}),t.keys=function(t){var e=Object(t),r=[];for(var i in e)r.push(i);return r.reverse(),function t(){for(;r.length;){var i=r.pop();if(i in e)return t.value=i,t.done=!1,t}return t.done=!0,t}},t.values=T,C.prototype={constructor:C,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(A),!t)for(var r in this)"t"===r.charAt(0)&&i.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var r=this;function n(i,n){return o.type="throw",o.arg=t,r.next=i,n&&(r.method="next",r.arg=e),!!n}for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s],o=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var l=i.call(a,"catchLoc"),h=i.call(a,"finallyLoc");if(l&&h){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else if(h){if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else throw Error("try statement without catch or finally")}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&i.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var s=n;break}}s&&("break"===t||"continue"===t)&&s.tryLoc<=e&&e<=s.finallyLoc&&(s=null);var a=s?s.completion:{};return(a.type=t,a.arg=e,s)?(this.method="next",this.next=s.finallyLoc,f):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),f},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),A(r),f}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var i=r.completion;if("throw"===i.type){var n=i.arg;A(r)}return n}}throw Error("illegal catch attempt")},delegateYield:function(t,r,i){return this.delegate={iterator:T(t),resultName:r,nextLoc:i},"next"===this.method&&(this.arg=e),f}},t}({});try{regeneratorRuntime=e}catch(t){"object"==typeof globalThis?globalThis.regeneratorRuntime=e:Function("r","regeneratorRuntime = r")(e)}class r{constructor(t){this.geometryType=t,this.vertexIds=[],this.objectIds=[],this.objectTypes=[],this.semanticSurfaces=[],this.geometryIds=[],this.boundaryIds=[],this.lodIds=[],this.materials={},this.textures={}}appendMaterial(t,e){t in this.materials||(this.materials[t]=[]);let r=this.materials[t];for(let t=r.length;t<this.count()-1;t++)r.push(-1);this.materials[t].push(e)}appendTexture(t,e){t in this.textures||(this.textures[t]={index:[],uvs:[]});let r=this.textures[t];for(let t=r.index.length;t<this.count()-1;t++)r.index.push(-1),r.uvs.push([0,0]);r.index.push(e.index),r.uvs.push(e.uvs)}addVertex(t,e,r,i,n,s,a,o,l){if(this.vertexIds.push(t),this.objectIds.push(e),this.objectTypes.push(r),this.semanticSurfaces.push(i),this.geometryIds.push(n),this.boundaryIds.push(s),this.lodIds.push(a),o){let t=this;Object.entries(o).forEach(e=>{let[r,i]=e;t.appendMaterial(r,i)})}if(l){let t=this;Object.entries(l).forEach(e=>{let[r,i]=e;t.appendTexture(r,i)})}}completeMaterials(){for(let t in this.materials){let e=this.materials[t];for(let t=e.length;t<this.count();t++)e.push(-1)}}completeTextures(){for(let t in this.textures){let e=this.textures[t];for(let t=e.index.length;t<this.count();t++)e.index.push(-1),e.uvs.push([0,0])}}count(){return this.vertexIds.length}getVertices(t){let e=[];for(let r of this.vertexIds){let i=t[r];e.push(...i)}return e}toObject(){return this.completeMaterials(),this.completeTextures(),{geometryType:this.geometryType,objectIds:this.objectIds,objectType:this.objectTypes,semanticSurfaces:this.semanticSurfaces,geometryIds:this.geometryIds,boundaryIds:this.boundaryIds,lodIds:this.lodIds,materials:this.materials,textures:this.textures}}setObjectId(t){for(let e=0;e<this.objectIds.length;e++)this.objectIds[e]=t}setObjectType(t){for(let e=0;e<this.objectTypes.length;e++)this.objectTypes[e]=t}setGeometryIdx(t){for(let e=0;e<this.geometryIds.length;e++)this.geometryIds[e]=t}merge(t){t.geometryType!=this.geometryType&&console.warn("Merging different types of geometry data!"),this.vertexIds.concat(this.otherGeomData.vertexId),this.objectIds.concat(this.otherGeomData.objectId),this.objectTypes.concat(this.otherGeomData.objectType),this.semanticSurfaces.concat(this.otherGeomData.surfaceType),this.geometryIds.concat(this.otherGeomData.geometryIdx),this.boundaryIds.concat(this.otherGeomData.boundaryIdx),this.lodIds.concat(this.otherGeomData.lodIdx)}}let i={GroundSurface:10066329,WallSurface:16777215,RoofSurface:16711680,TrafficArea:7237230,AuxiliaryTrafficArea:2916864,Window:23039,Door:6553600};class n{constructor(t,e,r){this.json=t,this.objectIds=e,this.objectColors=r,this.surfaceColors=i,this.lods=[]}clean(){}parseGeometry(t,e,r){}getObjectIdx(t){return this.objectIds.indexOf(t)}getObjectTypeIdx(t){let e=Object.keys(this.objectColors).indexOf(t);return e<0&&(e=Object.keys(this.objectColors).length,this.objectColors[t]=Math.floor(16777215*Math.random())),e}getSurfaceTypeIdx(t,e,r){let i=-1;if(e.length>0){let n=r[e[t]];n&&(i=Object.keys(this.surfaceColors).indexOf(n.type))<0&&(i=Object.keys(this.surfaceColors).length,this.surfaceColors[n.type]=Math.floor(16777215*Math.random()))}return i}getSurfaceMaterials(t,e){return Object.fromEntries(Object.entries(e).map(e=>{let[r,i]=e;return i.values?[r,i.values[t]]:void 0!==i.value?[r,i.value]:[r,-1]}))}getTextureData(t,e,r,i){if(this.json.appearance&&this.json.appearance["vertices-texture"]){let n=this.json.appearance["vertices-texture"];return Object.fromEntries(Object.entries(i).map(i=>{let[s,a]=i;if(!a.values)return[s,{index:-1,uvs:[0,0]}];{let i=r.filter(t=>t<=e),o=i.length,l=o?e-i[i.length-1]:e,h=a.values[t];if(null!==h[0][0]){let t=n[h[o][l+1]];return[s,{index:h[0][0],uvs:t}]}return[s,{index:-1,uvs:[0,0]}]}}))}}getLodIndex(t){if(void 0===t)return -1;let e=this.lods.indexOf(t);if(e<0){let e=this.lods.length;return this.lods.push(t),e}return e}}class s extends n{constructor(t,e,i){super(t,e,i),this.geomData=new r(1)}clean(){this.geomData=new r(1)}handles(t){return"MultiLineString"==t.type}parseGeometry(t,e,r){let i=t.semantics?t.semantics.surfaces:[];if("MultiLineString"==t.type){let n=this.json.CityObjects[e],s=this.getObjectIdx(e),a=this.getObjectTypeIdx(n.type),o=this.getLodIndex(n.geometry[r].lod),l=t.boundaries;for(let e=0;e<l.length;e++)if(l[e].length>1){let n=t.semantics?t.semantics.values:[],h=this.getSurfaceTypeIdx(e,n,i),u=l[e];for(let t=0;t<l[e].length-1;t++)this.geomData.addVertex(u[t],s,a,h,r,e,o),this.geomData.addVertex(u[t+1],s,a,h,r,e,o)}}}}class a extends n{constructor(t,e,i){super(t,e,i),this.geomData=new r(0)}clean(){this.geomData=new r(0)}handles(t){return"MultiPoint"==t.type}parseGeometry(t,e,r){let i=t.semantics?t.semantics.surfaces:[];if("MultiPoint"==t.type){let n=this.json.CityObjects[e],s=this.getObjectIdx(e),a=this.getObjectTypeIdx(n.type),o=this.getLodIndex(n.geometry[r].lod),l=t.boundaries;for(let e=0;e<l.length;e++){let n=t.semantics?t.semantics.values:[],h=this.getSurfaceTypeIdx(e,n,i);this.geomData.addVertex(l[e],s,a,h,r,e,o)}}}}let o="srgb",l="srgb-linear",h="display-p3-linear",u="linear",c="srgb",p="rec709";class d{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});let r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;let r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;let r=this._listeners[t];if(void 0!==r){let t=r.indexOf(e);-1!==t&&r.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;let e=this._listeners[t.type];if(void 0!==e){t.target=this;let r=e.slice(0);for(let e=0,i=r.length;e<i;e++)r[e].call(this,t);t.target=null}}}let m=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function f(){let t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,r=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(m[255&t]+m[t>>8&255]+m[t>>16&255]+m[t>>24&255]+"-"+m[255&e]+m[e>>8&255]+"-"+m[e>>16&15|64]+m[e>>24&255]+"-"+m[63&r|128]+m[r>>8&255]+"-"+m[r>>16&255]+m[r>>24&255]+m[255&i]+m[i>>8&255]+m[i>>16&255]+m[i>>24&255]).toLowerCase()}function g(t,e,r){return Math.max(e,Math.min(r,t))}function x(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw Error("Invalid component type.")}}function y(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw Error("Invalid component type.")}}class v{constructor(t=0,e=0){v.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){let e=this.x,r=this.y,i=t.elements;return this.x=i[0]*e+i[3]*r+i[6],this.y=i[1]*e+i[4]*r+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){let e=Math.sqrt(this.lengthSq()*t.lengthSq());return 0===e?Math.PI/2:Math.acos(g(this.dot(t)/e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){let e=this.x-t.x,r=this.y-t.y;return e*e+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,r){return this.x=t.x+(e.x-t.x)*r,this.y=t.y+(e.y-t.y)*r,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){let r=Math.cos(e),i=Math.sin(e),n=this.x-t.x,s=this.y-t.y;return this.x=n*r-s*i+t.x,this.y=n*i+s*r+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class _{constructor(t,e,r,i,n,s,a,o,l){_.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,r,i,n,s,a,o,l)}set(t,e,r,i,n,s,a,o,l){let h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=n,h[5]=o,h[6]=r,h[7]=s,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){let e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],this}extractBasis(t,e,r){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(t){let e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){let r=t.elements,i=e.elements,n=this.elements,s=r[0],a=r[3],o=r[6],l=r[1],h=r[4],u=r[7],c=r[2],p=r[5],d=r[8],m=i[0],f=i[3],g=i[6],x=i[1],y=i[4],v=i[7],_=i[2],b=i[5],w=i[8];return n[0]=s*m+a*x+o*_,n[3]=s*f+a*y+o*b,n[6]=s*g+a*v+o*w,n[1]=l*m+h*x+u*_,n[4]=l*f+h*y+u*b,n[7]=l*g+h*v+u*w,n[2]=c*m+p*x+d*_,n[5]=c*f+p*y+d*b,n[8]=c*g+p*v+d*w,this}multiplyScalar(t){let e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){let t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8];return e*s*h-e*a*l-r*n*h+r*a*o+i*n*l-i*s*o}invert(){let t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8],u=h*s-a*l,c=a*o-h*n,p=l*n-s*o,d=e*u+r*c+i*p;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);let m=1/d;return t[0]=u*m,t[1]=(i*l-h*r)*m,t[2]=(a*r-i*s)*m,t[3]=c*m,t[4]=(h*e-i*o)*m,t[5]=(i*n-a*e)*m,t[6]=p*m,t[7]=(r*o-l*e)*m,t[8]=(s*e-r*n)*m,this}transpose(){let t;let e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){let e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,r,i,n,s,a){let o=Math.cos(n),l=Math.sin(n);return this.set(r*o,r*l,-r*(o*s+l*a)+s+t,-i*l,i*o,-i*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(b.makeScale(t,e)),this}rotate(t){return this.premultiply(b.makeRotation(-t)),this}translate(t,e){return this.premultiply(b.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){let e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,r,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){let e=this.elements,r=t.elements;for(let t=0;t<9;t++)if(e[t]!==r[t])return!1;return!0}fromArray(t,e=0){for(let r=0;r<9;r++)this.elements[r]=t[r+e];return this}toArray(t=[],e=0){let r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t}clone(){return new this.constructor().fromArray(this.elements)}}let b=new _;function w(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let M={},S=new _().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),z=new _().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),A={[l]:{transfer:u,primaries:p,toReference:t=>t,fromReference:t=>t},[o]:{transfer:c,primaries:p,toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[h]:{transfer:u,primaries:"p3",toReference:t=>t.applyMatrix3(z),fromReference:t=>t.applyMatrix3(S)},"display-p3":{transfer:c,primaries:"p3",toReference:t=>t.convertSRGBToLinear().applyMatrix3(z),fromReference:t=>t.applyMatrix3(S).convertLinearToSRGB()}},C=new Set([l,h]),T={enabled:!0,_workingColorSpace:l,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(colorSpace){if(!C.has(colorSpace))throw Error(`Unsupported working color space, "${colorSpace}".`);this._workingColorSpace=colorSpace},convert:function(t,e,r){if(!1===this.enabled||e===r||!e||!r)return t;let i=A[e].toReference;return(0,A[r].fromReference)(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this._workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this._workingColorSpace)},getPrimaries:function(t){return A[t].primaries},getTransfer:function(t){return""===t?u:A[t].transfer}};function E(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function P(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class k{static getDataURL(e){let r;if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;if(e instanceof HTMLCanvasElement)r=e;else{void 0===t&&(t=w("canvas")),t.width=e.width,t.height=e.height;let i=t.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),r=t}return r.width>2048||r.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),r.toDataURL("image/jpeg",.6)):r.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){let e=w("canvas");e.width=t.width,e.height=t.height;let r=e.getContext("2d");r.drawImage(t,0,0,t.width,t.height);let i=r.getImageData(0,0,t.width,t.height),n=i.data;for(let t=0;t<n.length;t++)n[t]=255*E(n[t]/255);return r.putImageData(i,0,0),e}if(!t.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t;{let e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*E(e[t]/255)):e[t]=E(e[t]);return{data:e,width:t.width,height:t.height}}}}let N=0;class O{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:N++}),this.uuid=f(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){let e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];let r={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,r=i.length;e<r;e++)i[e].isDataTexture?t.push(I(i[e].image)):t.push(I(i[e]))}else t=I(i);r.url=t}return e||(t.images[this.uuid]=r),r}}function I(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?k.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let R=0;class L extends d{constructor(t=L.DEFAULT_IMAGE,e=L.DEFAULT_MAPPING,r=1001,i=1001,n=1006,s=1008,a=1023,o=1009,l=L.DEFAULT_ANISOTROPY,h=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:R++}),this.uuid=f(),this.name="",this.source=new O(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=r,this.wrapT=i,this.magFilter=n,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new v(0,0),this.repeat=new v(1,1),this.center=new v(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new _,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){let e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];let r={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(r.userData=this.userData),e||(t.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}L.DEFAULT_IMAGE=null,L.DEFAULT_MAPPING=300,L.DEFAULT_ANISOTROPY=1;class V{constructor(t=0,e=0,r=0,i=1){V.prototype.isVector4=!0,this.x=t,this.y=e,this.z=r,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){let e=this.x,r=this.y,i=this.z,n=this.w,s=t.elements;return this.x=s[0]*e+s[4]*r+s[8]*i+s[12]*n,this.y=s[1]*e+s[5]*r+s[9]*i+s[13]*n,this.z=s[2]*e+s[6]*r+s[10]*i+s[14]*n,this.w=s[3]*e+s[7]*r+s[11]*i+s[15]*n,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);let e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,r,i,n;let s=t.elements,a=s[0],o=s[4],l=s[8],h=s[1],u=s[5],c=s[9],p=s[2],d=s[6],m=s[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-p)&&.01>Math.abs(c-d)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+p)&&.1>Math.abs(c+d)&&.1>Math.abs(a+u+m-3))return this.set(1,0,0,0),this;e=Math.PI;let t=(a+1)/2,s=(u+1)/2,f=(m+1)/2,g=(o+h)/4,x=(l+p)/4,y=(c+d)/4;return t>s&&t>f?t<.01?(r=0,i=.707106781,n=.707106781):(i=g/(r=Math.sqrt(t)),n=x/r):s>f?s<.01?(r=.707106781,i=0,n=.707106781):(r=g/(i=Math.sqrt(s)),n=y/i):f<.01?(r=.707106781,i=.707106781,n=0):(r=x/(n=Math.sqrt(f)),i=y/n),this.set(r,i,n,e),this}let f=Math.sqrt((d-c)*(d-c)+(l-p)*(l-p)+(h-o)*(h-o));return .001>Math.abs(f)&&(f=1),this.x=(d-c)/f,this.y=(l-p)/f,this.z=(h-o)/f,this.w=Math.acos((a+u+m-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,r){return this.x=t.x+(e.x-t.x)*r,this.y=t.y+(e.y-t.y)*r,this.z=t.z+(e.z-t.z)*r,this.w=t.w+(e.w-t.w)*r,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class B{constructor(t=0,e=0,r=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=r,this._w=i}static slerpFlat(t,e,r,i,n,s,a){let o=r[i+0],l=r[i+1],h=r[i+2],u=r[i+3],c=n[s+0],p=n[s+1],d=n[s+2],m=n[s+3];if(0===a){t[e+0]=o,t[e+1]=l,t[e+2]=h,t[e+3]=u;return}if(1===a){t[e+0]=c,t[e+1]=p,t[e+2]=d,t[e+3]=m;return}if(u!==m||o!==c||l!==p||h!==d){let t=1-a,e=o*c+l*p+h*d+u*m,r=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){let n=Math.sqrt(i),s=Math.atan2(n,e*r);t=Math.sin(t*s)/n,a=Math.sin(a*s)/n}let n=a*r;if(o=o*t+c*n,l=l*t+p*n,h=h*t+d*n,u=u*t+m*n,t===1-a){let t=1/Math.sqrt(o*o+l*l+h*h+u*u);o*=t,l*=t,h*=t,u*=t}}t[e]=o,t[e+1]=l,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,r,i,n,s){let a=r[i],o=r[i+1],l=r[i+2],h=r[i+3],u=n[s],c=n[s+1],p=n[s+2],d=n[s+3];return t[e]=a*d+h*u+o*p-l*c,t[e+1]=o*d+h*c+l*u-a*p,t[e+2]=l*d+h*p+a*c-o*u,t[e+3]=h*d-a*u-o*c-l*p,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){let r=t._x,i=t._y,n=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(r/2),h=a(i/2),u=a(n/2),c=o(r/2),p=o(i/2),d=o(n/2);switch(s){case"XYZ":this._x=c*h*u+l*p*d,this._y=l*p*u-c*h*d,this._z=l*h*d+c*p*u,this._w=l*h*u-c*p*d;break;case"YXZ":this._x=c*h*u+l*p*d,this._y=l*p*u-c*h*d,this._z=l*h*d-c*p*u,this._w=l*h*u+c*p*d;break;case"ZXY":this._x=c*h*u-l*p*d,this._y=l*p*u+c*h*d,this._z=l*h*d+c*p*u,this._w=l*h*u-c*p*d;break;case"ZYX":this._x=c*h*u-l*p*d,this._y=l*p*u+c*h*d,this._z=l*h*d-c*p*u,this._w=l*h*u+c*p*d;break;case"YZX":this._x=c*h*u+l*p*d,this._y=l*p*u+c*h*d,this._z=l*h*d-c*p*u,this._w=l*h*u-c*p*d;break;case"XZY":this._x=c*h*u-l*p*d,this._y=l*p*u-c*h*d,this._z=l*h*d+c*p*u,this._w=l*h*u+c*p*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){let r=e/2,i=Math.sin(r);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(t){let e=t.elements,r=e[0],i=e[4],n=e[8],s=e[1],a=e[5],o=e[9],l=e[2],h=e[6],u=e[10],c=r+a+u;if(c>0){let t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(h-o)*t,this._y=(n-l)*t,this._z=(s-i)*t}else if(r>a&&r>u){let t=2*Math.sqrt(1+r-a-u);this._w=(h-o)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(n+l)/t}else if(a>u){let t=2*Math.sqrt(1+a-r-u);this._w=(n-l)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(o+h)/t}else{let t=2*Math.sqrt(1+u-r-a);this._w=(s-i)/t,this._x=(n+l)/t,this._y=(o+h)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let r=t.dot(e)+1;return r<Number.EPSILON?(r=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0):(this._x=0,this._y=-t.z,this._z=t.y)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x),this._w=r,this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(g(this.dot(t),-1,1)))}rotateTowards(t,e){let r=this.angleTo(t);if(0===r)return this;let i=Math.min(1,e/r);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){let r=t._x,i=t._y,n=t._z,s=t._w,a=e._x,o=e._y,l=e._z,h=e._w;return this._x=r*h+s*a+i*l-n*o,this._y=i*h+s*o+n*a-r*l,this._z=n*h+s*l+r*o-i*a,this._w=s*h-r*a-i*o-n*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);let r=this._x,i=this._y,n=this._z,s=this._w,a=s*t._w+r*t._x+i*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=r,this._y=i,this._z=n,this;let o=1-a*a;if(o<=Number.EPSILON){let t=1-e;return this._w=t*s+e*this._w,this._x=t*r+e*this._x,this._y=t*i+e*this._y,this._z=t*n+e*this._z,this.normalize(),this}let l=Math.sqrt(o),h=Math.atan2(l,a),u=Math.sin((1-e)*h)/l,c=Math.sin(e*h)/l;return this._w=s*u+this._w*c,this._x=r*u+this._x*c,this._y=i*u+this._y*c,this._z=n*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,e,r){return this.copy(t).slerp(e,r)}random(){let t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),r=Math.random(),i=Math.sqrt(1-r),n=Math.sqrt(r);return this.set(i*Math.sin(t),i*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(t=0,e=0,r=0){D.prototype.isVector3=!0,this.x=t,this.y=e,this.z=r}set(t,e,r){return void 0===r&&(r=this.z),this.x=t,this.y=e,this.z=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(U.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(U.setFromAxisAngle(t,e))}applyMatrix3(t){let e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[3]*r+n[6]*i,this.y=n[1]*e+n[4]*r+n[7]*i,this.z=n[2]*e+n[5]*r+n[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){let e=this.x,r=this.y,i=this.z,n=t.elements,s=1/(n[3]*e+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*e+n[4]*r+n[8]*i+n[12])*s,this.y=(n[1]*e+n[5]*r+n[9]*i+n[13])*s,this.z=(n[2]*e+n[6]*r+n[10]*i+n[14])*s,this}applyQuaternion(t){let e=this.x,r=this.y,i=this.z,n=t.x,s=t.y,a=t.z,o=t.w,l=2*(s*i-a*r),h=2*(a*e-n*i),u=2*(n*r-s*e);return this.x=e+o*l+s*u-a*h,this.y=r+o*h+a*l-n*u,this.z=i+o*u+n*h-s*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){let e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i,this.y=n[1]*e+n[5]*r+n[9]*i,this.z=n[2]*e+n[6]*r+n[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){let r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(t,Math.min(e,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,r){return this.x=t.x+(e.x-t.x)*r,this.y=t.y+(e.y-t.y)*r,this.z=t.z+(e.z-t.z)*r,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){let r=t.x,i=t.y,n=t.z,s=e.x,a=e.y,o=e.z;return this.x=i*o-n*a,this.y=n*s-r*o,this.z=r*a-i*s,this}projectOnVector(t){let e=t.lengthSq();if(0===e)return this.set(0,0,0);let r=t.dot(this)/e;return this.copy(t).multiplyScalar(r)}projectOnPlane(t){return F.copy(this).projectOnVector(t),this.sub(F)}reflect(t){return this.sub(F.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){let e=Math.sqrt(this.lengthSq()*t.lengthSq());return 0===e?Math.PI/2:Math.acos(g(this.dot(t)/e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){let e=this.x-t.x,r=this.y-t.y,i=this.z-t.z;return e*e+r*r+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,r){let i=Math.sin(e)*t;return this.x=i*Math.sin(r),this.y=Math.cos(e)*t,this.z=i*Math.cos(r),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,r){return this.x=t*Math.sin(e),this.y=r,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){let e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){let e=this.setFromMatrixColumn(t,0).length(),r=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=r,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let t=Math.random()*Math.PI*2,e=2*Math.random()-1,r=Math.sqrt(1-e*e);return this.x=r*Math.cos(t),this.y=e,this.z=r*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let F=new D,U=new B;class j{constructor(t=new D(1/0,1/0,1/0),e=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,r=t.length;e<r;e+=3)this.expandByPoint(q.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,r=t.count;e<r;e++)this.expandByPoint(q.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){let r=q.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);let r=t.geometry;if(void 0!==r){let i=r.getAttribute("position");if(!0===e&&void 0!==i&&!0!==t.isInstancedMesh)for(let e=0,r=i.count;e<r;e++)!0===t.isMesh?t.getVertexPosition(e,q):q.fromBufferAttribute(i,e),q.applyMatrix4(t.matrixWorld),this.expandByPoint(q);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),G.copy(t.boundingBox)):(null===r.boundingBox&&r.computeBoundingBox(),G.copy(r.boundingBox)),G.applyMatrix4(t.matrixWorld),this.union(G)}let i=t.children;for(let t=0,r=i.length;t<r;t++)this.expandByObject(i[t],e);return this}containsPoint(t){return!(t.x<this.min.x)&&!(t.x>this.max.x)&&!(t.y<this.min.y)&&!(t.y>this.max.y)&&!(t.z<this.min.z)&&!(t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x)&&!(t.min.x>this.max.x)&&!(t.max.y<this.min.y)&&!(t.min.y>this.max.y)&&!(t.max.z<this.min.z)&&!(t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,q),q.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,r;return t.normal.x>0?(e=t.normal.x*this.min.x,r=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,r=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,r+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,r+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,r+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,r+=t.normal.z*this.min.z),e<=-t.constant&&r>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(K),$.subVectors(this.max,K),J.subVectors(t.a,K),Z.subVectors(t.b,K),H.subVectors(t.c,K),Y.subVectors(Z,J),X.subVectors(H,Z),Q.subVectors(J,H);let e=[0,-Y.z,Y.y,0,-X.z,X.y,0,-Q.z,Q.y,Y.z,0,-Y.x,X.z,0,-X.x,Q.z,0,-Q.x,-Y.y,Y.x,0,-X.y,X.x,0,-Q.y,Q.x,0];return!!(tr(e,J,Z,H,$)&&tr(e=[1,0,0,0,1,0,0,0,1],J,Z,H,$))&&(tt.crossVectors(Y,X),tr(e=[tt.x,tt.y,tt.z],J,Z,H,$))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,q).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(q).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(W[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),W[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),W[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),W[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),W[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),W[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),W[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),W[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(W)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}let W=[new D,new D,new D,new D,new D,new D,new D,new D],q=new D,G=new j,J=new D,Z=new D,H=new D,Y=new D,X=new D,Q=new D,K=new D,$=new D,tt=new D,te=new D;function tr(t,e,r,i,n){for(let s=0,a=t.length-3;s<=a;s+=3){te.fromArray(t,s);let a=n.x*Math.abs(te.x)+n.y*Math.abs(te.y)+n.z*Math.abs(te.z),o=e.dot(te),l=r.dot(te),h=i.dot(te);if(Math.max(-Math.max(o,l,h),Math.min(o,l,h))>a)return!1}return!0}let ti=new j,tn=new D,ts=new D;class ta{constructor(t=new D,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){let r=this.center;void 0!==e?r.copy(e):ti.setFromPoints(t).getCenter(r);let i=0;for(let e=0,n=t.length;e<n;e++)i=Math.max(i,r.distanceToSquared(t[e]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){let e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){let r=this.center.distanceToSquared(t);return e.copy(t),r>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?t.makeEmpty():(t.set(this.center,this.center),t.expandByScalar(this.radius)),t}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;tn.subVectors(t,this.center);let e=tn.lengthSq();if(e>this.radius*this.radius){let t=Math.sqrt(e),r=(t-this.radius)*.5;this.center.addScaledVector(tn,r/t),this.radius+=r}return this}union(t){return t.isEmpty()||(this.isEmpty()?this.copy(t):!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(ts.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(tn.copy(t.center).add(ts)),this.expandByPoint(tn.copy(t.center).sub(ts)))),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}class to{constructor(t,e,r,i,n,s,a,o,l,h,u,c,p,d,m,f){to.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,r,i,n,s,a,o,l,h,u,c,p,d,m,f)}set(t,e,r,i,n,s,a,o,l,h,u,c,p,d,m,f){let g=this.elements;return g[0]=t,g[4]=e,g[8]=r,g[12]=i,g[1]=n,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=p,g[7]=d,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new to().fromArray(this.elements)}copy(t){let e=this.elements,r=t.elements;return e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[8]=r[8],e[9]=r[9],e[10]=r[10],e[11]=r[11],e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15],this}copyPosition(t){let e=this.elements,r=t.elements;return e[12]=r[12],e[13]=r[13],e[14]=r[14],this}setFromMatrix3(t){let e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,r){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(t,e,r){return this.set(t.x,e.x,r.x,0,t.y,e.y,r.y,0,t.z,e.z,r.z,0,0,0,0,1),this}extractRotation(t){let e=this.elements,r=t.elements,i=1/tl.setFromMatrixColumn(t,0).length(),n=1/tl.setFromMatrixColumn(t,1).length(),s=1/tl.setFromMatrixColumn(t,2).length();return e[0]=r[0]*i,e[1]=r[1]*i,e[2]=r[2]*i,e[3]=0,e[4]=r[4]*n,e[5]=r[5]*n,e[6]=r[6]*n,e[7]=0,e[8]=r[8]*s,e[9]=r[9]*s,e[10]=r[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){let e=this.elements,r=t.x,i=t.y,n=t.z,s=Math.cos(r),a=Math.sin(r),o=Math.cos(i),l=Math.sin(i),h=Math.cos(n),u=Math.sin(n);if("XYZ"===t.order){let t=s*h,r=s*u,i=a*h,n=a*u;e[0]=o*h,e[4]=-o*u,e[8]=l,e[1]=r+i*l,e[5]=t-n*l,e[9]=-a*o,e[2]=n-t*l,e[6]=i+r*l,e[10]=s*o}else if("YXZ"===t.order){let t=o*h,r=o*u,i=l*h,n=l*u;e[0]=t+n*a,e[4]=i*a-r,e[8]=s*l,e[1]=s*u,e[5]=s*h,e[9]=-a,e[2]=r*a-i,e[6]=n+t*a,e[10]=s*o}else if("ZXY"===t.order){let t=o*h,r=o*u,i=l*h,n=l*u;e[0]=t-n*a,e[4]=-s*u,e[8]=i+r*a,e[1]=r+i*a,e[5]=s*h,e[9]=n-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){let t=s*h,r=s*u,i=a*h,n=a*u;e[0]=o*h,e[4]=i*l-r,e[8]=t*l+n,e[1]=o*u,e[5]=n*l+t,e[9]=r*l-i,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){let t=s*o,r=s*l,i=a*o,n=a*l;e[0]=o*h,e[4]=n-t*u,e[8]=i*u+r,e[1]=u,e[5]=s*h,e[9]=-a*h,e[2]=-l*h,e[6]=r*u+i,e[10]=t-n*u}else if("XZY"===t.order){let t=s*o,r=s*l,i=a*o,n=a*l;e[0]=o*h,e[4]=-u,e[8]=l*h,e[1]=t*u+n,e[5]=s*h,e[9]=r*u-i,e[2]=i*u-r,e[6]=a*h,e[10]=n*u+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(tu,t,tc)}lookAt(t,e,r){let i=this.elements;return tm.subVectors(t,e),0===tm.lengthSq()&&(tm.z=1),tm.normalize(),tp.crossVectors(r,tm),0===tp.lengthSq()&&(1===Math.abs(r.z)?tm.x+=1e-4:tm.z+=1e-4,tm.normalize(),tp.crossVectors(r,tm)),tp.normalize(),td.crossVectors(tm,tp),i[0]=tp.x,i[4]=td.x,i[8]=tm.x,i[1]=tp.y,i[5]=td.y,i[9]=tm.y,i[2]=tp.z,i[6]=td.z,i[10]=tm.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){let r=t.elements,i=e.elements,n=this.elements,s=r[0],a=r[4],o=r[8],l=r[12],h=r[1],u=r[5],c=r[9],p=r[13],d=r[2],m=r[6],f=r[10],g=r[14],x=r[3],y=r[7],v=r[11],_=r[15],b=i[0],w=i[4],M=i[8],S=i[12],z=i[1],A=i[5],C=i[9],T=i[13],E=i[2],P=i[6],k=i[10],N=i[14],O=i[3],I=i[7],R=i[11],L=i[15];return n[0]=s*b+a*z+o*E+l*O,n[4]=s*w+a*A+o*P+l*I,n[8]=s*M+a*C+o*k+l*R,n[12]=s*S+a*T+o*N+l*L,n[1]=h*b+u*z+c*E+p*O,n[5]=h*w+u*A+c*P+p*I,n[9]=h*M+u*C+c*k+p*R,n[13]=h*S+u*T+c*N+p*L,n[2]=d*b+m*z+f*E+g*O,n[6]=d*w+m*A+f*P+g*I,n[10]=d*M+m*C+f*k+g*R,n[14]=d*S+m*T+f*N+g*L,n[3]=x*b+y*z+v*E+_*O,n[7]=x*w+y*A+v*P+_*I,n[11]=x*M+y*C+v*k+_*R,n[15]=x*S+y*T+v*N+_*L,this}multiplyScalar(t){let e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){let t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],s=t[1],a=t[5],o=t[9],l=t[13],h=t[2],u=t[6],c=t[10],p=t[14],d=t[3];return d*(+n*o*u-i*l*u-n*a*c+r*l*c+i*a*p-r*o*p)+t[7]*(+e*o*p-e*l*c+n*s*c-i*s*p+i*l*h-n*o*h)+t[11]*(+e*l*u-e*a*p-n*s*u+r*s*p+n*a*h-r*l*h)+t[15]*(-i*a*h-e*o*u+e*a*c+i*s*u-r*s*c+r*o*h)}transpose(){let t;let e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(t,e,r){let i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=r),this}invert(){let t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],s=t[4],a=t[5],o=t[6],l=t[7],h=t[8],u=t[9],c=t[10],p=t[11],d=t[12],m=t[13],f=t[14],g=t[15],x=u*f*l-m*c*l+m*o*p-a*f*p-u*o*g+a*c*g,y=d*c*l-h*f*l-d*o*p+s*f*p+h*o*g-s*c*g,v=h*m*l-d*u*l+d*a*p-s*m*p-h*a*g+s*u*g,_=d*u*o-h*m*o-d*a*c+s*m*c+h*a*f-s*u*f,b=e*x+r*y+i*v+n*_;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/b;return t[0]=x*w,t[1]=(m*c*n-u*f*n-m*i*p+r*f*p+u*i*g-r*c*g)*w,t[2]=(a*f*n-m*o*n+m*i*l-r*f*l-a*i*g+r*o*g)*w,t[3]=(u*o*n-a*c*n-u*i*l+r*c*l+a*i*p-r*o*p)*w,t[4]=y*w,t[5]=(h*f*n-d*c*n+d*i*p-e*f*p-h*i*g+e*c*g)*w,t[6]=(d*o*n-s*f*n-d*i*l+e*f*l+s*i*g-e*o*g)*w,t[7]=(s*c*n-h*o*n+h*i*l-e*c*l-s*i*p+e*o*p)*w,t[8]=v*w,t[9]=(d*u*n-h*m*n-d*r*p+e*m*p+h*r*g-e*u*g)*w,t[10]=(s*m*n-d*a*n+d*r*l-e*m*l-s*r*g+e*a*g)*w,t[11]=(h*a*n-s*u*n-h*r*l+e*u*l+s*r*p-e*a*p)*w,t[12]=_*w,t[13]=(h*m*i-d*u*i+d*r*c-e*m*c-h*r*f+e*u*f)*w,t[14]=(d*a*i-s*m*i-d*r*o+e*m*o+s*r*f-e*a*f)*w,t[15]=(s*u*i-h*a*i+h*r*o-e*u*o-s*r*c+e*a*c)*w,this}scale(t){let e=this.elements,r=t.x,i=t.y,n=t.z;return e[0]*=r,e[4]*=i,e[8]*=n,e[1]*=r,e[5]*=i,e[9]*=n,e[2]*=r,e[6]*=i,e[10]*=n,e[3]*=r,e[7]*=i,e[11]*=n,this}getMaxScaleOnAxis(){let t=this.elements;return Math.sqrt(Math.max(t[0]*t[0]+t[1]*t[1]+t[2]*t[2],t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t[8]*t[8]+t[9]*t[9]+t[10]*t[10]))}makeTranslation(t,e,r){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this}makeRotationX(t){let e=Math.cos(t),r=Math.sin(t);return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this}makeRotationY(t){let e=Math.cos(t),r=Math.sin(t);return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this}makeRotationZ(t){let e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){let r=Math.cos(e),i=Math.sin(e),n=1-r,s=t.x,a=t.y,o=t.z,l=n*s,h=n*a;return this.set(l*s+r,l*a-i*o,l*o+i*a,0,l*a+i*o,h*a+r,h*o-i*s,0,l*o-i*a,h*o+i*s,n*o*o+r,0,0,0,0,1),this}makeScale(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this}makeShear(t,e,r,i,n,s){return this.set(1,r,n,0,t,1,s,0,e,i,1,0,0,0,0,1),this}compose(t,e,r){let i=this.elements,n=e._x,s=e._y,a=e._z,o=e._w,l=n+n,h=s+s,u=a+a,c=n*l,p=n*h,d=n*u,m=s*h,f=s*u,g=a*u,x=o*l,y=o*h,v=o*u,_=r.x,b=r.y,w=r.z;return i[0]=(1-(m+g))*_,i[1]=(p+v)*_,i[2]=(d-y)*_,i[3]=0,i[4]=(p-v)*b,i[5]=(1-(c+g))*b,i[6]=(f+x)*b,i[7]=0,i[8]=(d+y)*w,i[9]=(f-x)*w,i[10]=(1-(c+m))*w,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,r){let i=this.elements,n=tl.set(i[0],i[1],i[2]).length(),s=tl.set(i[4],i[5],i[6]).length(),a=tl.set(i[8],i[9],i[10]).length();0>this.determinant()&&(n=-n),t.x=i[12],t.y=i[13],t.z=i[14],th.copy(this);let o=1/n,l=1/s,h=1/a;return th.elements[0]*=o,th.elements[1]*=o,th.elements[2]*=o,th.elements[4]*=l,th.elements[5]*=l,th.elements[6]*=l,th.elements[8]*=h,th.elements[9]*=h,th.elements[10]*=h,e.setFromRotationMatrix(th),r.x=n,r.y=s,r.z=a,this}makePerspective(t,e,r,i,n,s,a=2e3){let o,l;let h=this.elements;if(2e3===a)o=-(s+n)/(s-n),l=-2*s*n/(s-n);else if(2001===a)o=-s/(s-n),l=-s*n/(s-n);else throw Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return h[0]=2*n/(e-t),h[4]=0,h[8]=(e+t)/(e-t),h[12]=0,h[1]=0,h[5]=2*n/(r-i),h[9]=(r+i)/(r-i),h[13]=0,h[2]=0,h[6]=0,h[10]=o,h[14]=l,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,r,i,n,s,a=2e3){let o,l;let h=this.elements,u=1/(e-t),c=1/(r-i),p=1/(s-n);if(2e3===a)o=(s+n)*p,l=-2*p;else if(2001===a)o=n*p,l=-1*p;else throw Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-((e+t)*u),h[1]=0,h[5]=2*c,h[9]=0,h[13]=-((r+i)*c),h[2]=0,h[6]=0,h[10]=l,h[14]=-o,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){let e=this.elements,r=t.elements;for(let t=0;t<16;t++)if(e[t]!==r[t])return!1;return!0}fromArray(t,e=0){for(let r=0;r<16;r++)this.elements[r]=t[r+e];return this}toArray(t=[],e=0){let r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t}}let tl=new D,th=new to,tu=new D(0,0,0),tc=new D(1,1,1),tp=new D,td=new D,tm=new D,tf=new to,tg=new B;class tx{constructor(t=0,e=0,r=0,i=tx.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=r,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,r,i=this._order){return this._x=t,this._y=e,this._z=r,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,r=!0){let i=t.elements,n=i[0],s=i[4],a=i[8],o=i[1],l=i[5],h=i[9],u=i[2],c=i[6],p=i[10];switch(e){case"XYZ":this._y=Math.asin(g(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,n)):(this._x=Math.atan2(c,l),this._z=0);break;case"YXZ":this._x=Math.asin(-g(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(a,p),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(g(c,-1,1)),.9999999>Math.abs(c)?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-g(u,-1,1)),.9999999>Math.abs(u)?(this._x=Math.atan2(c,p),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(g(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-g(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(c,l),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===r&&this._onChangeCallback(),this}setFromQuaternion(t,e,r){return tf.makeRotationFromQuaternion(t),this.setFromRotationMatrix(tf,e,r)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return tg.setFromEuler(this),this.setFromQuaternion(tg,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}tx.DEFAULT_ORDER="XYZ";class ty{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!=0}isEnabled(t){return(this.mask&(1<<t|0))!=0}}let tv=0,t_=new D,tb=new B,tw=new to,tM=new D,tS=new D,tz=new D,tA=new B,tC=new D(1,0,0),tT=new D(0,1,0),tE=new D(0,0,1),tP={type:"added"},tk={type:"removed"},tN={type:"childadded",child:null},tO={type:"childremoved",child:null};class tI extends d{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:tv++}),this.uuid=f(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=tI.DEFAULT_UP.clone();let t=new D,e=new tx,r=new B,i=new D(1,1,1);e._onChange(function(){r.setFromEuler(e,!1)}),r._onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new to},normalMatrix:{value:new _}}),this.matrix=new to,this.matrixWorld=new to,this.matrixAutoUpdate=tI.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=tI.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new ty,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return tb.setFromAxisAngle(t,e),this.quaternion.multiply(tb),this}rotateOnWorldAxis(t,e){return tb.setFromAxisAngle(t,e),this.quaternion.premultiply(tb),this}rotateX(t){return this.rotateOnAxis(tC,t)}rotateY(t){return this.rotateOnAxis(tT,t)}rotateZ(t){return this.rotateOnAxis(tE,t)}translateOnAxis(t,e){return t_.copy(t).applyQuaternion(this.quaternion),this.position.add(t_.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(tC,t)}translateY(t){return this.translateOnAxis(tT,t)}translateZ(t){return this.translateOnAxis(tE,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(tw.copy(this.matrixWorld).invert())}lookAt(t,e,r){t.isVector3?tM.copy(t):tM.set(t,e,r);let i=this.parent;this.updateWorldMatrix(!0,!1),tS.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?tw.lookAt(tS,tM,this.up):tw.lookAt(tM,tS,this.up),this.quaternion.setFromRotationMatrix(tw),i&&(tw.extractRotation(i.matrixWorld),tb.setFromRotationMatrix(tw),this.quaternion.premultiply(tb.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",t):t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(tP),tN.child=t,this.dispatchEvent(tN),tN.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let e=this.children.indexOf(t);return -1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(tk),tO.child=t,this.dispatchEvent(tO),tO.child=null),this}removeFromParent(){let t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),tw.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),tw.multiply(t.parent.matrixWorld)),t.applyMatrix4(tw),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(tP),tN.child=t,this.dispatchEvent(tN),tN.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let r=0,i=this.children.length;r<i;r++){let i=this.children[r].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e,r=[]){this[t]===e&&r.push(this);let i=this.children;for(let n=0,s=i.length;n<s;n++)i[n].getObjectsByProperty(t,e,r);return r}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tS,t,tz),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tS,tA,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);let e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);let e=this.children;for(let r=0,i=e.length;r<i;r++)e[r].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);let e=this.children;for(let r=0,i=e.length;r<i;r++)e[r].traverseVisible(t)}traverseAncestors(t){let e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);let e=this.children;for(let r=0,i=e.length;r<i;r++){let i=e[r];(!0===i.matrixWorldAutoUpdate||!0===t)&&i.updateMatrixWorld(t)}}updateWorldMatrix(t,e){let r=this.parent;if(!0===t&&null!==r&&!0===r.matrixWorldAutoUpdate&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){let t=this.children;for(let e=0,r=t.length;e<r;e++){let r=t[e];!0===r.matrixWorldAutoUpdate&&r.updateWorldMatrix(!1,!0)}}}toJSON(t){let e=void 0===t||"string"==typeof t,r={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let i={};function n(e,r){return void 0===e[r.uuid]&&(e[r.uuid]=r.toJSON(t)),r.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),null!==this._colorsTexture&&(i.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),null!==this.boundingBox&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=n(t.geometries,this.geometry);let e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){let r=e.shapes;if(Array.isArray(r))for(let e=0,i=r.length;e<i;e++){let i=r[e];n(t.shapes,i)}else n(t.shapes,r)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(n(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let e=[];for(let r=0,i=this.material.length;r<i;r++)e.push(n(t.materials,this.material[r]));i.material=e}else i.material=n(t.materials,this.material)}if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){let r=this.animations[e];i.animations.push(n(t.animations,r))}}if(e){let e=s(t.geometries),i=s(t.materials),n=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),h=s(t.animations),u=s(t.nodes);e.length>0&&(r.geometries=e),i.length>0&&(r.materials=i),n.length>0&&(r.textures=n),a.length>0&&(r.images=a),o.length>0&&(r.shapes=o),l.length>0&&(r.skeletons=l),h.length>0&&(r.animations=h),u.length>0&&(r.nodes=u)}return r.object=i,r;function s(t){let e=[];for(let r in t){let i=t[r];delete i.metadata,e.push(i)}return e}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){let r=t.children[e];this.add(r.clone())}return this}}tI.DEFAULT_UP=new D(0,1,0),tI.DEFAULT_MATRIX_AUTO_UPDATE=!0,tI.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;let tR=new D,tL=new D,tV=new D,tB=new D,tD=new D,tF=new D,tU=new D,tj=new D,tW=new D,tq=new D;class tG{constructor(t=new D,e=new D,r=new D){this.a=t,this.b=e,this.c=r}static getNormal(t,e,r,i){i.subVectors(r,e),tR.subVectors(t,e),i.cross(tR);let n=i.lengthSq();return n>0?i.multiplyScalar(1/Math.sqrt(n)):i.set(0,0,0)}static getBarycoord(t,e,r,i,n){tR.subVectors(i,e),tL.subVectors(r,e),tV.subVectors(t,e);let s=tR.dot(tR),a=tR.dot(tL),o=tR.dot(tV),l=tL.dot(tL),h=tL.dot(tV),u=s*l-a*a;if(0===u)return n.set(0,0,0),null;let c=1/u,p=(l*o-a*h)*c,d=(s*h-a*o)*c;return n.set(1-p-d,d,p)}static containsPoint(t,e,r,i){return null!==this.getBarycoord(t,e,r,i,tB)&&tB.x>=0&&tB.y>=0&&tB.x+tB.y<=1}static getInterpolation(t,e,r,i,n,s,a,o){return null===this.getBarycoord(t,e,r,i,tB)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(n,tB.x),o.addScaledVector(s,tB.y),o.addScaledVector(a,tB.z),o)}static isFrontFacing(t,e,r,i){return tR.subVectors(r,e),tL.subVectors(t,e),0>tR.cross(tL).dot(i)}set(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this}setFromPointsAndIndices(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,r,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,r),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return tR.subVectors(this.c,this.b),tL.subVectors(this.a,this.b),.5*tR.cross(tL).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return tG.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return tG.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,r,i,n){return tG.getInterpolation(t,this.a,this.b,this.c,e,r,i,n)}containsPoint(t){return tG.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return tG.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){let r,i;let n=this.a,s=this.b,a=this.c;tD.subVectors(s,n),tF.subVectors(a,n),tj.subVectors(t,n);let o=tD.dot(tj),l=tF.dot(tj);if(o<=0&&l<=0)return e.copy(n);tW.subVectors(t,s);let h=tD.dot(tW),u=tF.dot(tW);if(h>=0&&u<=h)return e.copy(s);let c=o*u-h*l;if(c<=0&&o>=0&&h<=0)return r=o/(o-h),e.copy(n).addScaledVector(tD,r);tq.subVectors(t,a);let p=tD.dot(tq),d=tF.dot(tq);if(d>=0&&p<=d)return e.copy(a);let m=p*l-o*d;if(m<=0&&l>=0&&d<=0)return i=l/(l-d),e.copy(n).addScaledVector(tF,i);let f=h*d-p*u;if(f<=0&&u-h>=0&&p-d>=0)return tU.subVectors(a,s),i=(u-h)/(u-h+(p-d)),e.copy(s).addScaledVector(tU,i);let g=1/(f+m+c);return r=m*g,i=c*g,e.copy(n).addScaledVector(tD,r).addScaledVector(tF,i)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let tJ={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},tZ={h:0,s:0,l:0},tH={h:0,s:0,l:0};function tY(t,e,r){return(r<0&&(r+=1),r>1&&(r-=1),r<1/6)?t+(e-t)*6*r:r<.5?e:r<2/3?t+(e-t)*6*(2/3-r):t}class tX{constructor(t,e,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,r)}set(t,e,r){return void 0===e&&void 0===r?t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t):this.setRGB(t,e,r),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=o){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,T.toWorkingColorSpace(this,e),this}setRGB(t,e,r,i=T.workingColorSpace){return this.r=t,this.g=e,this.b=r,T.toWorkingColorSpace(this,i),this}setHSL(t,e,r,i=T.workingColorSpace){if(t=(t%1+1)%1,e=g(e,0,1),r=g(r,0,1),0===e)this.r=this.g=this.b=r;else{let i=r<=.5?r*(1+e):r+e-r*e,n=2*r-i;this.r=tY(n,i,t+1/3),this.g=tY(n,i,t),this.b=tY(n,i,t-1/3)}return T.toWorkingColorSpace(this,i),this}setStyle(t,e=o){let r;function i(e){void 0!==e&&1>parseFloat(e)&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}if(r=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;let s=r[1],a=r[2];switch(s){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){let i=r[1],n=i.length;if(3===n)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,e);if(6===n)return this.setHex(parseInt(i,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=o){let r=tJ[t.toLowerCase()];return void 0!==r?this.setHex(r,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=E(t.r),this.g=E(t.g),this.b=E(t.b),this}copyLinearToSRGB(t){return this.r=P(t.r),this.g=P(t.g),this.b=P(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=o){return T.fromWorkingColorSpace(tQ.copy(this),t),65536*Math.round(g(255*tQ.r,0,255))+256*Math.round(g(255*tQ.g,0,255))+Math.round(g(255*tQ.b,0,255))}getHexString(t=o){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=T.workingColorSpace){let r,i;T.fromWorkingColorSpace(tQ.copy(this),e);let n=tQ.r,s=tQ.g,a=tQ.b,o=Math.max(n,s,a),l=Math.min(n,s,a),h=(l+o)/2;if(l===o)r=0,i=0;else{let t=o-l;switch(i=h<=.5?t/(o+l):t/(2-o-l),o){case n:r=(s-a)/t+(s<a?6:0);break;case s:r=(a-n)/t+2;break;case a:r=(n-s)/t+4}r/=6}return t.h=r,t.s=i,t.l=h,t}getRGB(t,e=T.workingColorSpace){return T.fromWorkingColorSpace(tQ.copy(this),e),t.r=tQ.r,t.g=tQ.g,t.b=tQ.b,t}getStyle(t=o){T.fromWorkingColorSpace(tQ.copy(this),t);let e=tQ.r,r=tQ.g,i=tQ.b;return t!==o?`color(${t} ${e.toFixed(3)} ${r.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*r)},${Math.round(255*i)})`}offsetHSL(t,e,r){return this.getHSL(tZ),this.setHSL(tZ.h+t,tZ.s+e,tZ.l+r)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,r){return this.r=t.r+(e.r-t.r)*r,this.g=t.g+(e.g-t.g)*r,this.b=t.b+(e.b-t.b)*r,this}lerpHSL(t,e){this.getHSL(tZ),t.getHSL(tH);let r=(1-e)*tZ.h+e*tH.h,i=(1-e)*tZ.s+e*tH.s,n=(1-e)*tZ.l+e*tH.l;return this.setHSL(r,i,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){let e=this.r,r=this.g,i=this.b,n=t.elements;return this.r=n[0]*e+n[3]*r+n[6]*i,this.g=n[1]*e+n[4]*r+n[7]*i,this.b=n[2]*e+n[5]*r+n[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let tQ=new tX;tX.NAMES=tJ;let tK=0,t$=new D,t0=new v;class t1{constructor(t,e,r=!1){if(Array.isArray(t))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=r,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}get updateRange(){var t;return(t="THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.")in M||(M[t]=!0,console.warn(t)),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,r){t*=this.itemSize,r*=e.itemSize;for(let i=0,n=this.itemSize;i<n;i++)this.array[t+i]=e.array[r+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,r=this.count;e<r;e++)t0.fromBufferAttribute(this,e),t0.applyMatrix3(t),this.setXY(e,t0.x,t0.y);else if(3===this.itemSize)for(let e=0,r=this.count;e<r;e++)t$.fromBufferAttribute(this,e),t$.applyMatrix3(t),this.setXYZ(e,t$.x,t$.y,t$.z);return this}applyMatrix4(t){for(let e=0,r=this.count;e<r;e++)t$.fromBufferAttribute(this,e),t$.applyMatrix4(t),this.setXYZ(e,t$.x,t$.y,t$.z);return this}applyNormalMatrix(t){for(let e=0,r=this.count;e<r;e++)t$.fromBufferAttribute(this,e),t$.applyNormalMatrix(t),this.setXYZ(e,t$.x,t$.y,t$.z);return this}transformDirection(t){for(let e=0,r=this.count;e<r;e++)t$.fromBufferAttribute(this,e),t$.transformDirection(t),this.setXYZ(e,t$.x,t$.y,t$.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let r=this.array[t*this.itemSize+e];return this.normalized&&(r=x(r,this.array)),r}setComponent(t,e,r){return this.normalized&&(r=y(r,this.array)),this.array[t*this.itemSize+e]=r,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=x(e,this.array)),e}setX(t,e){return this.normalized&&(e=y(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=x(e,this.array)),e}setY(t,e){return this.normalized&&(e=y(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=x(e,this.array)),e}setZ(t,e){return this.normalized&&(e=y(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=x(e,this.array)),e}setW(t,e){return this.normalized&&(e=y(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,r){return t*=this.itemSize,this.normalized&&(e=y(e,this.array),r=y(r,this.array)),this.array[t+0]=e,this.array[t+1]=r,this}setXYZ(t,e,r,i){return t*=this.itemSize,this.normalized&&(e=y(e,this.array),r=y(r,this.array),i=y(i,this.array)),this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this}setXYZW(t,e,r,i,n){return t*=this.itemSize,this.normalized&&(e=y(e,this.array),r=y(r,this.array),i=y(i,this.array),n=y(n,this.array)),this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),t}}class t2 extends t1{constructor(t,e,r){super(new Uint16Array(t),e,r)}}class t3 extends t1{constructor(t,e,r){super(new Uint32Array(t),e,r)}}class t5 extends t1{constructor(t,e,r){super(new Float32Array(t),e,r)}}let t4=0,t6=new to,t7=new tI,t9=new D,t8=new j,et=new j,ee=new D;class er extends d{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:t4++}),this.uuid=f(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(!function(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}(t)?t2:t3)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,r=0){this.groups.push({start:t,count:e,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){let e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);let r=this.attributes.normal;if(void 0!==r){let e=new _().getNormalMatrix(t);r.applyNormalMatrix(e),r.needsUpdate=!0}let i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return t6.makeRotationFromQuaternion(t),this.applyMatrix4(t6),this}rotateX(t){return t6.makeRotationX(t),this.applyMatrix4(t6),this}rotateY(t){return t6.makeRotationY(t),this.applyMatrix4(t6),this}rotateZ(t){return t6.makeRotationZ(t),this.applyMatrix4(t6),this}translate(t,e,r){return t6.makeTranslation(t,e,r),this.applyMatrix4(t6),this}scale(t,e,r){return t6.makeScale(t,e,r),this.applyMatrix4(t6),this}lookAt(t){return t7.lookAt(t),t7.updateMatrix(),this.applyMatrix4(t7.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(t9).negate(),this.translate(t9.x,t9.y,t9.z),this}setFromPoints(t){let e=[];for(let r=0,i=t.length;r<i;r++){let i=t[r];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new t5(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new j);let t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,r=e.length;t<r;t++){let r=e[t];t8.setFromBufferAttribute(r),this.morphTargetsRelative?(ee.addVectors(this.boundingBox.min,t8.min),this.boundingBox.expandByPoint(ee),ee.addVectors(this.boundingBox.max,t8.max),this.boundingBox.expandByPoint(ee)):(this.boundingBox.expandByPoint(t8.min),this.boundingBox.expandByPoint(t8.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ta);let t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new D,1/0);return}if(t){let r=this.boundingSphere.center;if(t8.setFromBufferAttribute(t),e)for(let t=0,r=e.length;t<r;t++){let r=e[t];et.setFromBufferAttribute(r),this.morphTargetsRelative?(ee.addVectors(t8.min,et.min),t8.expandByPoint(ee),ee.addVectors(t8.max,et.max),t8.expandByPoint(ee)):(t8.expandByPoint(et.min),t8.expandByPoint(et.max))}t8.getCenter(r);let i=0;for(let e=0,n=t.count;e<n;e++)ee.fromBufferAttribute(t,e),i=Math.max(i,r.distanceToSquared(ee));if(e)for(let n=0,s=e.length;n<s;n++){let s=e[n],a=this.morphTargetsRelative;for(let e=0,n=s.count;e<n;e++)ee.fromBufferAttribute(s,e),a&&(t9.fromBufferAttribute(t,e),ee.add(t9)),i=Math.max(i,r.distanceToSquared(ee))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let r=e.position,i=e.normal,n=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new t1(new Float32Array(4*r.count),4));let s=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<r.count;t++)a[t]=new D,o[t]=new D;let l=new D,h=new D,u=new D,c=new v,p=new v,d=new v,m=new D,f=new D,g=this.groups;0===g.length&&(g=[{start:0,count:t.count}]);for(let e=0,i=g.length;e<i;++e){let i=g[e],s=i.start,x=i.count;for(let e=s,i=s+x;e<i;e+=3)!function(t,e,i){l.fromBufferAttribute(r,t),h.fromBufferAttribute(r,e),u.fromBufferAttribute(r,i),c.fromBufferAttribute(n,t),p.fromBufferAttribute(n,e),d.fromBufferAttribute(n,i),h.sub(l),u.sub(l),p.sub(c),d.sub(c);let s=1/(p.x*d.y-d.x*p.y);isFinite(s)&&(m.copy(h).multiplyScalar(d.y).addScaledVector(u,-p.y).multiplyScalar(s),f.copy(u).multiplyScalar(p.x).addScaledVector(h,-d.x).multiplyScalar(s),a[t].add(m),a[e].add(m),a[i].add(m),o[t].add(f),o[e].add(f),o[i].add(f))}(t.getX(e+0),t.getX(e+1),t.getX(e+2))}let x=new D,y=new D,_=new D,b=new D;function w(t){_.fromBufferAttribute(i,t),b.copy(_);let e=a[t];x.copy(e),x.sub(_.multiplyScalar(_.dot(e))).normalize(),y.crossVectors(b,e);let r=y.dot(o[t]);s.setXYZW(t,x.x,x.y,x.z,r<0?-1:1)}for(let e=0,r=g.length;e<r;++e){let r=g[e],i=r.start,n=r.count;for(let e=i,r=i+n;e<r;e+=3)w(t.getX(e+0)),w(t.getX(e+1)),w(t.getX(e+2))}}computeVertexNormals(){let t=this.index,e=this.getAttribute("position");if(void 0!==e){let r=this.getAttribute("normal");if(void 0===r)r=new t1(new Float32Array(3*e.count),3),this.setAttribute("normal",r);else for(let t=0,e=r.count;t<e;t++)r.setXYZ(t,0,0,0);let i=new D,n=new D,s=new D,a=new D,o=new D,l=new D,h=new D,u=new D;if(t)for(let c=0,p=t.count;c<p;c+=3){let p=t.getX(c+0),d=t.getX(c+1),m=t.getX(c+2);i.fromBufferAttribute(e,p),n.fromBufferAttribute(e,d),s.fromBufferAttribute(e,m),h.subVectors(s,n),u.subVectors(i,n),h.cross(u),a.fromBufferAttribute(r,p),o.fromBufferAttribute(r,d),l.fromBufferAttribute(r,m),a.add(h),o.add(h),l.add(h),r.setXYZ(p,a.x,a.y,a.z),r.setXYZ(d,o.x,o.y,o.z),r.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)i.fromBufferAttribute(e,t+0),n.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),h.subVectors(s,n),u.subVectors(i,n),h.cross(u),r.setXYZ(t+0,h.x,h.y,h.z),r.setXYZ(t+1,h.x,h.y,h.z),r.setXYZ(t+2,h.x,h.y,h.z);this.normalizeNormals(),r.needsUpdate=!0}}normalizeNormals(){let t=this.attributes.normal;for(let e=0,r=t.count;e<r;e++)ee.fromBufferAttribute(t,e),ee.normalize(),t.setXYZ(e,ee.x,ee.y,ee.z)}toNonIndexed(){function t(t,e){let r=t.array,i=t.itemSize,n=t.normalized,s=new r.constructor(e.length*i),a=0,o=0;for(let n=0,l=e.length;n<l;n++){a=t.isInterleavedBufferAttribute?e[n]*t.data.stride+t.offset:e[n]*i;for(let t=0;t<i;t++)s[o++]=r[a++]}return new t1(s,i,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let e=new er,r=this.index.array,i=this.attributes;for(let n in i){let s=t(i[n],r);e.setAttribute(n,s)}let n=this.morphAttributes;for(let i in n){let s=[],a=n[i];for(let e=0,i=a.length;e<i;e++){let i=t(a[e],r);s.push(i)}e.morphAttributes[i]=s}e.morphTargetsRelative=this.morphTargetsRelative;let s=this.groups;for(let t=0,r=s.length;t<r;t++){let r=s[t];e.addGroup(r.start,r.count,r.materialIndex)}return e}toJSON(){let t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){let e=this.parameters;for(let r in e)void 0!==e[r]&&(t[r]=e[r]);return t}t.data={attributes:{}};let e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});let r=this.attributes;for(let e in r){let i=r[e];t.data.attributes[e]=i.toJSON(t.data)}let i={},n=!1;for(let e in this.morphAttributes){let r=this.morphAttributes[e],s=[];for(let e=0,i=r.length;e<i;e++){let i=r[e];s.push(i.toJSON(t.data))}s.length>0&&(i[e]=s,n=!0)}n&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);let s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));let a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let e={};this.name=t.name;let r=t.index;null!==r&&this.setIndex(r.clone(e));let i=t.attributes;for(let t in i){let r=i[t];this.setAttribute(t,r.clone(e))}let n=t.morphAttributes;for(let t in n){let r=[],i=n[t];for(let t=0,n=i.length;t<n;t++)r.push(i[t].clone(e));this.morphAttributes[t]=r}this.morphTargetsRelative=t.morphTargetsRelative;let s=t.groups;for(let t=0,e=s.length;t<e;t++){let e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}let a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());let o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ei extends er{constructor(t=1,e=1,r=1,i=1,n=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:s};let a=this;i=Math.floor(i),n=Math.floor(n);let o=[],l=[],h=[],u=[],c=0,p=0;function d(t,e,r,i,n,s,d,m,f,g,x){let y=s/f,v=d/g,_=s/2,b=d/2,w=m/2,M=f+1,S=g+1,z=0,A=0,C=new D;for(let s=0;s<S;s++){let a=s*v-b;for(let o=0;o<M;o++){let c=o*y-_;C[t]=c*i,C[e]=a*n,C[r]=w,l.push(C.x,C.y,C.z),C[t]=0,C[e]=0,C[r]=m>0?1:-1,h.push(C.x,C.y,C.z),u.push(o/f),u.push(1-s/g),z+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){let r=c+e+M*t,i=c+e+M*(t+1),n=c+(e+1)+M*(t+1),s=c+(e+1)+M*t;o.push(r,i,s),o.push(i,n,s),A+=6}a.addGroup(p,A,x),p+=A,c+=z}d("z","y","x",-1,-1,r,e,t,s=Math.floor(s),n,0),d("z","y","x",1,-1,r,e,-t,s,n,1),d("x","z","y",1,1,t,r,e,i,s,2),d("x","z","y",1,-1,t,r,-e,i,s,3),d("x","y","z",1,-1,t,e,r,i,n,4),d("x","y","z",-1,-1,t,e,-r,i,n,5),this.setIndex(o),this.setAttribute("position",new t5(l,3)),this.setAttribute("normal",new t5(h,3)),this.setAttribute("uv",new t5(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ei(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function en(t){let e={};for(let r=0;r<t.length;r++){let i=function(t){let e={};for(let r in t)for(let i in e[r]={},t[r]){let n=t[r][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[r][i]=null):e[r][i]=n.clone():Array.isArray(n)?e[r][i]=n.slice():e[r][i]=n}return e}(t[r]);for(let t in i)e[t]=i[t]}return e}class es extends er{constructor(t=1,e=1,r=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:i};let n=t/2,s=e/2,a=Math.floor(r),o=Math.floor(i),l=a+1,h=o+1,u=t/a,c=e/o,p=[],d=[],m=[],f=[];for(let t=0;t<h;t++){let e=t*c-s;for(let r=0;r<l;r++){let i=r*u-n;d.push(i,-e,0),m.push(0,0,1),f.push(r/a),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){let r=e+l*t,i=e+l*(t+1),n=e+1+l*(t+1),s=e+1+l*t;p.push(r,i,s),p.push(i,n,s)}this.setIndex(p),this.setAttribute("position",new t5(d,3)),this.setAttribute("normal",new t5(m,3)),this.setAttribute("uv",new t5(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new es(t.width,t.height,t.widthSegments,t.heightSegments)}}let ea="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",eo="#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n	uniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",el={common:{diffuse:{value:new tX(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new _},alphaMap:{value:null},alphaMapTransform:{value:new _},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new _}},envmap:{envMap:{value:null},envMapRotation:{value:new _},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new _}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new _}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new _},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new _},normalScale:{value:new v(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new _},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new _}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new _}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new _}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new tX(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new tX(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new _},alphaTest:{value:0},uvTransform:{value:new _}},sprite:{diffuse:{value:new tX(16777215)},opacity:{value:1},center:{value:new v(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new _},alphaMap:{value:null},alphaMapTransform:{value:new _},alphaTest:{value:0}}},eh={basic:{uniforms:en([el.common,el.specularmap,el.envmap,el.aomap,el.lightmap,el.fog]),vertexShader:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},lambert:{uniforms:en([el.common,el.specularmap,el.envmap,el.aomap,el.lightmap,el.emissivemap,el.bumpmap,el.normalmap,el.displacementmap,el.fog,el.lights,{emissive:{value:new tX(0)}}]),vertexShader:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},phong:{uniforms:en([el.common,el.specularmap,el.envmap,el.aomap,el.lightmap,el.emissivemap,el.bumpmap,el.normalmap,el.displacementmap,el.fog,el.lights,{emissive:{value:new tX(0)},specular:{value:new tX(1118481)},shininess:{value:30}}]),vertexShader:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},standard:{uniforms:en([el.common,el.envmap,el.aomap,el.lightmap,el.emissivemap,el.bumpmap,el.normalmap,el.displacementmap,el.roughnessmap,el.metalnessmap,el.fog,el.lights,{emissive:{value:new tX(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ea,fragmentShader:eo},toon:{uniforms:en([el.common,el.aomap,el.lightmap,el.emissivemap,el.bumpmap,el.normalmap,el.displacementmap,el.gradientmap,el.fog,el.lights,{emissive:{value:new tX(0)}}]),vertexShader:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},matcap:{uniforms:en([el.common,el.bumpmap,el.normalmap,el.displacementmap,el.fog,{matcap:{value:null}}]),vertexShader:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",fragmentShader:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}"},points:{uniforms:en([el.points,el.fog]),vertexShader:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}"},dashed:{uniforms:en([el.common,el.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}"},depth:{uniforms:en([el.common,el.displacementmap]),vertexShader:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",fragmentShader:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}"},normal:{uniforms:en([el.common,el.bumpmap,el.normalmap,el.displacementmap,{opacity:{value:1}}]),vertexShader:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",fragmentShader:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}"},sprite:{uniforms:en([el.sprite,el.fog]),vertexShader:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"},background:{uniforms:{uvTransform:{value:new _},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",fragmentShader:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new _}},vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",fragmentShader:"#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}"},distanceRGBA:{uniforms:en([el.common,el.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",fragmentShader:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}"},shadow:{uniforms:en([el.lights,el.fog,{color:{value:new tX(0)},opacity:{value:1}}]),vertexShader:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fragmentShader:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}"}};eh.physical={uniforms:en([eh.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new _},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new _},clearcoatNormalScale:{value:new v(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new _},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new _},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new _},sheen:{value:0},sheenColor:{value:new tX(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new _},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new _},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new _},transmissionSamplerSize:{value:new v},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new _},attenuationDistance:{value:0},attenuationColor:{value:new tX(0)},specularColor:{value:new tX(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new _},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new _},anisotropyVector:{value:new v},anisotropyMap:{value:null},anisotropyMapTransform:{value:new _}}]),vertexShader:ea,fragmentShader:eo},new class extends L{constructor(t,e,r,i,n,s,a,o,l,h=1026){if(1026!==h&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&1026===h&&(r=1014),void 0===r&&1027===h&&(r=1020),super(null,i,n,s,a,o,h,r,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==a?a:1003,this.minFilter=void 0!==o?o:1003,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){let e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}(1,1).compareFunction=515,new Float32Array(16),new Float32Array(9),new Float32Array(4);class eu{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){let r=this.getUtoTmapping(t);return this.getPoint(r,e)}getPoints(t=5){let e=[];for(let r=0;r<=t;r++)e.push(this.getPoint(r/t));return e}getSpacedPoints(t=5){let e=[];for(let r=0;r<=t;r++)e.push(this.getPointAt(r/t));return e}getLength(){let t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let e=[],r,i=this.getPoint(0),n=0;e.push(0);for(let s=1;s<=t;s++)e.push(n+=(r=this.getPoint(s/t)).distanceTo(i)),i=r;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){let r;let i=this.getLengths(),n=0,s=i.length;r=e||t*i[s-1];let a=0,o=s-1,l;for(;a<=o;)if((l=i[n=Math.floor(a+(o-a)/2)]-r)<0)a=n+1;else if(l>0)o=n-1;else{o=n;break}if(i[n=o]===r)return n/(s-1);let h=i[n],u=i[n+1];return(n+(r-h)/(u-h))/(s-1)}getTangent(t,e){let r=t-1e-4,i=t+1e-4;r<0&&(r=0),i>1&&(i=1);let n=this.getPoint(r),s=this.getPoint(i),a=e||(n.isVector2?new v:new D);return a.copy(s).sub(n).normalize(),a}getTangentAt(t,e){let r=this.getUtoTmapping(t);return this.getTangent(r,e)}computeFrenetFrames(t,e){let r=new D,i=[],n=[],s=[],a=new D,o=new to;for(let e=0;e<=t;e++){let r=e/t;i[e]=this.getTangentAt(r,new D)}n[0]=new D,s[0]=new D;let l=Number.MAX_VALUE,h=Math.abs(i[0].x),u=Math.abs(i[0].y),c=Math.abs(i[0].z);h<=l&&(l=h,r.set(1,0,0)),u<=l&&(l=u,r.set(0,1,0)),c<=l&&r.set(0,0,1),a.crossVectors(i[0],r).normalize(),n[0].crossVectors(i[0],a),s[0].crossVectors(i[0],n[0]);for(let e=1;e<=t;e++){if(n[e]=n[e-1].clone(),s[e]=s[e-1].clone(),a.crossVectors(i[e-1],i[e]),a.length()>Number.EPSILON){a.normalize();let t=Math.acos(g(i[e-1].dot(i[e]),-1,1));n[e].applyMatrix4(o.makeRotationAxis(a,t))}s[e].crossVectors(i[e],n[e])}if(!0===e){let e=Math.acos(g(n[0].dot(n[t]),-1,1));e/=t,i[0].dot(a.crossVectors(n[0],n[t]))>0&&(e=-e);for(let r=1;r<=t;r++)n[r].applyMatrix4(o.makeRotationAxis(i[r],e*r)),s[r].crossVectors(i[r],n[r])}return{tangents:i,normals:n,binormals:s}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){let t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class ec extends eu{constructor(t=0,e=0,r=1,i=1,n=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e=new v){let r=2*Math.PI,i=this.aEndAngle-this.aStartAngle,n=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=n?0:r),!0!==this.aClockwise||n||(i===r?i=-r:i-=r);let s=this.aStartAngle+t*i,a=this.aX+this.xRadius*Math.cos(s),o=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),r=a-this.aX,i=o-this.aY;a=r*t-i*e+this.aX,o=r*e+i*t+this.aY}return e.set(a,o)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){let t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}function ep(){let t=0,e=0,r=0,i=0;function n(n,s,a,o){t=n,e=a,r=-3*n+3*s-2*a-o,i=2*n-2*s+a+o}return{initCatmullRom:function(t,e,r,i,s){n(e,r,s*(r-t),s*(i-e))},initNonuniformCatmullRom:function(t,e,r,i,s,a,o){let l=(e-t)/s-(r-t)/(s+a)+(r-e)/a,h=(r-e)/a-(i-e)/(a+o)+(i-r)/o;n(e,r,l*=a,h*=a)},calc:function(n){let s=n*n;return t+e*n+r*s+s*n*i}}}let ed=new D,em=new ep,ef=new ep,eg=new ep;function ex(t,e,r,i,n){let s=(i-e)*.5,a=(n-r)*.5,o=t*t;return t*o*(2*r-2*i+s+a)+(-3*r+3*i-2*s-a)*o+s*t+r}function ey(t,e,r,i){return function(t,e){let r=1-t;return r*r*e}(t,e)+2*(1-t)*t*r+t*t*i}function ev(t,e,r,i,n){return function(t,e){let r=1-t;return r*r*r*e}(t,e)+function(t,e){let r=1-t;return 3*r*r*t*e}(t,r)+3*(1-t)*t*t*i+t*t*t*n}class e_ extends eu{constructor(t=new v,e=new v,r=new v,i=new v){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=r,this.v3=i}getPoint(t,e=new v){let r=this.v0,i=this.v1,n=this.v2,s=this.v3;return e.set(ev(t,r.x,i.x,n.x,s.x),ev(t,r.y,i.y,n.y,s.y)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class eb extends eu{constructor(t=new v,e=new v){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new v){return 1===t?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(t).add(this.v1)),e}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new v){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ew extends eu{constructor(t=new v,e=new v,r=new v){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=r}getPoint(t,e=new v){let r=this.v0,i=this.v1,n=this.v2;return e.set(ey(t,r.x,i.x,n.x),ey(t,r.y,i.y,n.y)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class eM extends eu{constructor(t=new D,e=new D,r=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=r}getPoint(t,e=new D){let r=this.v0,i=this.v1,n=this.v2;return e.set(ey(t,r.x,i.x,n.x),ey(t,r.y,i.y,n.y),ey(t,r.z,i.z,n.z)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class eS extends eu{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new v){let r=this.points,i=(r.length-1)*t,n=Math.floor(i),s=i-n,a=r[0===n?n:n-1],o=r[n],l=r[n>r.length-2?r.length-1:n+1],h=r[n>r.length-3?r.length-1:n+2];return e.set(ex(s,a.x,o.x,l.x,h.x),ex(s,a.y,o.y,l.y,h.y)),e}copy(t){super.copy(t),this.points=[];for(let e=0,r=t.points.length;e<r;e++){let r=t.points[e];this.points.push(r.clone())}return this}toJSON(){let t=super.toJSON();t.points=[];for(let e=0,r=this.points.length;e<r;e++){let r=this.points[e];t.points.push(r.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,r=t.points.length;e<r;e++){let r=t.points[e];this.points.push(new v().fromArray(r))}return this}}var ez=Object.freeze({__proto__:null,ArcCurve:class extends ec{constructor(t,e,r,i,n,s){super(t,e,r,r,i,n,s),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends eu{constructor(t=[],e=!1,r="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=r,this.tension=i}getPoint(t,e=new D){let r,i;let n=this.points,s=n.length,a=(s-(this.closed?0:1))*t,o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s)+1)*s:0===l&&o===s-1&&(o=s-2,l=1),this.closed||o>0?r=n[(o-1)%s]:(ed.subVectors(n[0],n[1]).add(n[0]),r=ed);let h=n[o%s],u=n[(o+1)%s];if(this.closed||o+2<s?i=n[(o+2)%s]:(ed.subVectors(n[s-1],n[s-2]).add(n[s-1]),i=ed),"centripetal"===this.curveType||"chordal"===this.curveType){let t="chordal"===this.curveType?.5:.25,e=Math.pow(r.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),s=Math.pow(u.distanceToSquared(i),t);n<1e-4&&(n=1),e<1e-4&&(e=n),s<1e-4&&(s=n),em.initNonuniformCatmullRom(r.x,h.x,u.x,i.x,e,n,s),ef.initNonuniformCatmullRom(r.y,h.y,u.y,i.y,e,n,s),eg.initNonuniformCatmullRom(r.z,h.z,u.z,i.z,e,n,s)}else"catmullrom"===this.curveType&&(em.initCatmullRom(r.x,h.x,u.x,i.x,this.tension),ef.initCatmullRom(r.y,h.y,u.y,i.y,this.tension),eg.initCatmullRom(r.z,h.z,u.z,i.z,this.tension));return e.set(em.calc(l),ef.calc(l),eg.calc(l)),e}copy(t){super.copy(t),this.points=[];for(let e=0,r=t.points.length;e<r;e++){let r=t.points[e];this.points.push(r.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){let t=super.toJSON();t.points=[];for(let e=0,r=this.points.length;e<r;e++){let r=this.points[e];t.points.push(r.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,r=t.points.length;e<r;e++){let r=t.points[e];this.points.push(new D().fromArray(r))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}},CubicBezierCurve:e_,CubicBezierCurve3:class extends eu{constructor(t=new D,e=new D,r=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=r,this.v3=i}getPoint(t,e=new D){let r=this.v0,i=this.v1,n=this.v2,s=this.v3;return e.set(ev(t,r.x,i.x,n.x,s.x),ev(t,r.y,i.y,n.y,s.y),ev(t,r.z,i.z,n.z,s.z)),e}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){let t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},EllipseCurve:ec,LineCurve:eb,LineCurve3:class extends eu{constructor(t=new D,e=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new D){return 1===t?e.copy(this.v2):(e.copy(this.v2).sub(this.v1),e.multiplyScalar(t).add(this.v1)),e}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new D){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){let t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:ew,QuadraticBezierCurve3:eM,SplineCurve:eS});class eA extends eu{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){let t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){let r=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new ez[r](e,t))}return this}getPoint(t,e){let r=t*this.getLength(),i=this.getCurveLengths(),n=0;for(;n<i.length;){if(i[n]>=r){let t=i[n]-r,s=this.curves[n],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}n++}return null}getLength(){let t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let t=[],e=0;for(let r=0,i=this.curves.length;r<i;r++)t.push(e+=this.curves[r].getLength());return this.cacheLengths=t,t}getSpacedPoints(t=40){let e=[];for(let r=0;r<=t;r++)e.push(this.getPoint(r/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){let e;let r=[];for(let i=0,n=this.curves;i<n.length;i++){let s=n[i],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){let i=o[t];e&&e.equals(i)||(r.push(i),e=i)}}return this.autoClose&&r.length>1&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(t){super.copy(t),this.curves=[];for(let e=0,r=t.curves.length;e<r;e++){let r=t.curves[e];this.curves.push(r.clone())}return this.autoClose=t.autoClose,this}toJSON(){let t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,r=this.curves.length;e<r;e++){let r=this.curves[e];t.curves.push(r.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,r=t.curves.length;e<r;e++){let r=t.curves[e];this.curves.push(new ez[r.type]().fromJSON(r))}return this}}class eC extends eA{constructor(t){super(),this.type="Path",this.currentPoint=new v,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){let r=new eb(this.currentPoint.clone(),new v(t,e));return this.curves.push(r),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,r,i){let n=new ew(this.currentPoint.clone(),new v(t,e),new v(r,i));return this.curves.push(n),this.currentPoint.set(r,i),this}bezierCurveTo(t,e,r,i,n,s){let a=new e_(this.currentPoint.clone(),new v(t,e),new v(r,i),new v(n,s));return this.curves.push(a),this.currentPoint.set(n,s),this}splineThru(t){let e=new eS([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,r,i,n,s){let a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,r,i,n,s),this}absarc(t,e,r,i,n,s){return this.absellipse(t,e,r,r,i,n,s),this}ellipse(t,e,r,i,n,s,a,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+l,e+h,r,i,n,s,a,o),this}absellipse(t,e,r,i,n,s,a,o){let l=new ec(t,e,r,i,n,s,a,o);if(this.curves.length>0){let t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);let h=l.getPoint(1);return this.currentPoint.copy(h),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){let t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class eT extends er{constructor(t=[new v(0,-.5),new v(.5,0),new v(0,.5)],e=12,r=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:i},e=Math.floor(e),i=g(i,0,2*Math.PI);let n=[],s=[],a=[],o=[],l=[],h=1/e,u=new D,c=new v,p=new D,d=new D,m=new D,f=0,x=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:f=t[e+1].x-t[e].x,x=t[e+1].y-t[e].y,p.x=1*x,p.y=-f,p.z=0*x,m.copy(p),p.normalize(),o.push(p.x,p.y,p.z);break;case t.length-1:o.push(m.x,m.y,m.z);break;default:f=t[e+1].x-t[e].x,x=t[e+1].y-t[e].y,p.x=1*x,p.y=-f,p.z=0*x,d.copy(p),p.x+=m.x,p.y+=m.y,p.z+=m.z,p.normalize(),o.push(p.x,p.y,p.z),m.copy(d)}for(let n=0;n<=e;n++){let p=r+n*h*i,d=Math.sin(p),m=Math.cos(p);for(let r=0;r<=t.length-1;r++){u.x=t[r].x*d,u.y=t[r].y,u.z=t[r].x*m,s.push(u.x,u.y,u.z),c.x=n/e,c.y=r/(t.length-1),a.push(c.x,c.y);let i=o[3*r+0]*d,h=o[3*r+1],p=o[3*r+0]*m;l.push(i,h,p)}}for(let r=0;r<e;r++)for(let e=0;e<t.length-1;e++){let i=e+r*t.length,s=i+t.length,a=i+t.length+1,o=i+1;n.push(i,s,o),n.push(a,o,s)}this.setIndex(n),this.setAttribute("position",new t5(s,3)),this.setAttribute("uv",new t5(a,2)),this.setAttribute("normal",new t5(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eT(t.points,t.segments,t.phiStart,t.phiLength)}}class eE extends eT{constructor(t=1,e=1,r=4,i=8){let n=new eC;n.absarc(0,-e/2,t,1.5*Math.PI,0),n.absarc(0,e/2,t,0,.5*Math.PI),super(n.getPoints(r),i),this.type="CapsuleGeometry",this.parameters={radius:t,length:e,capSegments:r,radialSegments:i}}static fromJSON(t){return new eE(t.radius,t.length,t.capSegments,t.radialSegments)}}class eP extends er{constructor(t=1,e=32,r=0,i=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},e=Math.max(3,e);let n=[],s=[],a=[],o=[],l=new D,h=new v;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let n=0,u=3;n<=e;n++,u+=3){let c=r+n/e*i;l.x=t*Math.cos(c),l.y=t*Math.sin(c),s.push(l.x,l.y,l.z),a.push(0,0,1),h.x=(s[u]/t+1)/2,h.y=(s[u+1]/t+1)/2,o.push(h.x,h.y)}for(let t=1;t<=e;t++)n.push(t,t+1,0);this.setIndex(n),this.setAttribute("position",new t5(s,3)),this.setAttribute("normal",new t5(a,3)),this.setAttribute("uv",new t5(o,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eP(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class ek extends er{constructor(t=1,e=1,r=1,i=32,n=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:a,thetaLength:o};let l=this;i=Math.floor(i),n=Math.floor(n);let h=[],u=[],c=[],p=[],d=0,m=[],f=r/2,g=0;function x(r){let n=d,s=new v,m=new D,x=0,y=!0===r?t:e,_=!0===r?1:-1;for(let t=1;t<=i;t++)u.push(0,f*_,0),c.push(0,_,0),p.push(.5,.5),d++;let b=d;for(let t=0;t<=i;t++){let e=t/i*o+a,r=Math.cos(e),n=Math.sin(e);m.x=y*n,m.y=f*_,m.z=y*r,u.push(m.x,m.y,m.z),c.push(0,_,0),s.x=.5*r+.5,s.y=.5*n*_+.5,p.push(s.x,s.y),d++}for(let t=0;t<i;t++){let e=n+t,i=b+t;!0===r?h.push(i,i+1,e):h.push(i+1,i,e),x+=3}l.addGroup(g,x,!0===r?1:2),g+=x}(function(){let s=new D,x=new D,y=0,v=(e-t)/r;for(let l=0;l<=n;l++){let h=[],g=l/n,y=g*(e-t)+t;for(let t=0;t<=i;t++){let e=t/i,n=e*o+a,l=Math.sin(n),m=Math.cos(n);x.x=y*l,x.y=-g*r+f,x.z=y*m,u.push(x.x,x.y,x.z),s.set(l,v,m).normalize(),c.push(s.x,s.y,s.z),p.push(e,1-g),h.push(d++)}m.push(h)}for(let t=0;t<i;t++)for(let e=0;e<n;e++){let r=m[e][t],i=m[e+1][t],n=m[e+1][t+1],s=m[e][t+1];h.push(r,i,s),h.push(i,n,s),y+=6}l.addGroup(g,y,0),g+=y})(),!1===s&&(t>0&&x(!0),e>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new t5(u,3)),this.setAttribute("normal",new t5(c,3)),this.setAttribute("uv",new t5(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ek(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class eN extends ek{constructor(t=1,e=1,r=32,i=1,n=!1,s=0,a=2*Math.PI){super(0,t,e,r,i,n,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:r,heightSegments:i,openEnded:n,thetaStart:s,thetaLength:a}}static fromJSON(t){return new eN(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class eO extends er{constructor(t=[],e=[],r=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:i};let n=[],s=[];function a(t){n.push(t.x,t.y,t.z)}function o(e,r){let i=3*e;r.x=t[i+0],r.y=t[i+1],r.z=t[i+2]}function l(t,e,r,i){i<0&&1===t.x&&(s[e]=t.x-1),0===r.x&&0===r.z&&(s[e]=i/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}(function(t){let r=new D,i=new D,n=new D;for(let s=0;s<e.length;s+=3)o(e[s+0],r),o(e[s+1],i),o(e[s+2],n),function(t,e,r,i){let n=i+1,s=[];for(let i=0;i<=n;i++){s[i]=[];let a=t.clone().lerp(r,i/n),o=e.clone().lerp(r,i/n),l=n-i;for(let t=0;t<=l;t++)0===t&&i===n?s[i][t]=a:s[i][t]=a.clone().lerp(o,t/l)}for(let t=0;t<n;t++)for(let e=0;e<2*(n-t)-1;e++){let r=Math.floor(e/2);e%2==0?(a(s[t][r+1]),a(s[t+1][r]),a(s[t][r])):(a(s[t][r+1]),a(s[t+1][r+1]),a(s[t+1][r]))}}(r,i,n,t)})(i),function(t){let e=new D;for(let r=0;r<n.length;r+=3)e.x=n[r+0],e.y=n[r+1],e.z=n[r+2],e.normalize().multiplyScalar(t),n[r+0]=e.x,n[r+1]=e.y,n[r+2]=e.z}(r),function(){let t=new D;for(let e=0;e<n.length;e+=3){t.x=n[e+0],t.y=n[e+1],t.z=n[e+2];let r=h(t)/2/Math.PI+.5,i=Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5;s.push(r,1-i)}(function(){let t=new D,e=new D,r=new D,i=new D,a=new v,o=new v,u=new v;for(let c=0,p=0;c<n.length;c+=9,p+=6){t.set(n[c+0],n[c+1],n[c+2]),e.set(n[c+3],n[c+4],n[c+5]),r.set(n[c+6],n[c+7],n[c+8]),a.set(s[p+0],s[p+1]),o.set(s[p+2],s[p+3]),u.set(s[p+4],s[p+5]),i.copy(t).add(e).add(r).divideScalar(3);let d=h(i);l(a,p+0,t,d),l(o,p+2,e,d),l(u,p+4,r,d)}})(),function(){for(let t=0;t<s.length;t+=6){let e=s[t+0],r=s[t+2],i=s[t+4],n=Math.max(e,r,i),a=Math.min(e,r,i);n>.9&&a<.1&&(e<.2&&(s[t+0]+=1),r<.2&&(s[t+2]+=1),i<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new t5(n,3)),this.setAttribute("normal",new t5(n.slice(),3)),this.setAttribute("uv",new t5(s,2)),0===i?this.computeVertexNormals():this.normalizeNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new eO(t.vertices,t.indices,t.radius,t.details)}}class eI extends eO{constructor(t=1,e=0){let r=(1+Math.sqrt(5))/2,i=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new eI(t.radius,t.detail)}}class eR extends eC{constructor(t){super(t),this.uuid=f(),this.type="Shape",this.holes=[]}getPointsHoles(t){let e=[];for(let r=0,i=this.holes.length;r<i;r++)e[r]=this.holes[r].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,r=t.holes.length;e<r;e++){let r=t.holes[e];this.holes.push(r.clone())}return this}toJSON(){let t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,r=this.holes.length;e<r;e++){let r=this.holes[e];t.holes.push(r.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,r=t.holes.length;e<r;e++){let r=t.holes[e];this.holes.push(new eC().fromJSON(r))}return this}}let eL=function(t,e,r=2){let i,n,s,a,o,l,h;let u=e&&e.length,c=u?e[0]*r:t.length,p=eV(t,0,c,r,!0),d=[];if(!p||p.next===p.prev)return d;if(u&&(p=function(t,e,r,i){let n,s,a,o,l;let h=[];for(n=0,s=e.length;n<s;n++)a=e[n]*i,o=n<s-1?e[n+1]*i:t.length,(l=eV(t,a,o,i,!1))===l.next&&(l.steiner=!0),h.push(function(t){let e=t,r=t;do(e.x<r.x||e.x===r.x&&e.y<r.y)&&(r=e),e=e.next;while(e!==t)return r}(l));for(h.sort(eD),n=0;n<h.length;n++)r=function(t,e){let r=function(t,e){let r=e,i=-1/0,n,s=t.x,a=t.y;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){let t=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(t<=s&&t>i&&(i=t,n=r.x<r.next.x?r:r.next,t===s))return n}r=r.next}while(r!==e)if(!n)return null;let o=n,l=n.x,h=n.y,u=1/0,c;r=n;do{var p,d;s>=r.x&&r.x>=l&&s!==r.x&&eU(a<h?s:i,a,l,h,a<h?i:s,a,r.x,r.y)&&(c=Math.abs(a-r.y)/(s-r.x),eZ(r,t)&&(c<u||c===u&&(r.x>n.x||r.x===n.x&&(p=n,d=r,0>ej(p.prev,p,d.prev)&&0>ej(d.next,p,p.next))))&&(n=r,u=c)),r=r.next}while(r!==o)return n}(t,e);if(!r)return e;let i=eH(r,t);return eB(i,i.next),eB(r,r.next)}(h[n],r);return r}(t,e,p,r)),t.length>80*r){i=s=t[0],n=a=t[1];for(let e=r;e<c;e+=r)o=t[e],l=t[e+1],o<i&&(i=o),l<n&&(n=l),o>s&&(s=o),l>a&&(a=l);h=0!==(h=Math.max(s-i,a-n))?32767/h:0}return function t(e,r,i,n,s,a,o){if(!e)return;!o&&a&&function(t,e,r,i){let n=t;do 0===n.z&&(n.z=eF(n.x,n.y,e,r,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==t)n.prevZ.nextZ=null,n.prevZ=null,function(t){let e,r,i,n,s,a,o,l,h=1;do{for(r=t,t=null,s=null,a=0;r;){for(a++,i=r,o=0,e=0;e<h&&(o++,i=i.nextZ);e++);for(l=h;o>0||l>0&&i;)0!==o&&(0===l||!i||r.z<=i.z)?(n=r,r=r.nextZ,o--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:t=n,n.prevZ=s,s=n;r=i}s.nextZ=null,h*=2}while(a>1)}(n)}(e,n,s,a);let l=e,h,u;for(;e.prev!==e.next;){if(h=e.prev,u=e.next,a?function(t,e,r,i){let n=t.prev,s=t.next;if(ej(n,t,s)>=0)return!1;let a=n.x,o=t.x,l=s.x,h=n.y,u=t.y,c=s.y,p=a<o?a<l?a:l:o<l?o:l,d=h<u?h<c?h:c:u<c?u:c,m=a>o?a>l?a:l:o>l?o:l,f=h>u?h>c?h:c:u>c?u:c,g=eF(p,d,e,r,i),x=eF(m,f,e,r,i),y=t.prevZ,v=t.nextZ;for(;y&&y.z>=g&&v&&v.z<=x;){if(y.x>=p&&y.x<=m&&y.y>=d&&y.y<=f&&y!==n&&y!==s&&eU(a,h,o,u,l,c,y.x,y.y)&&ej(y.prev,y,y.next)>=0||(y=y.prevZ,v.x>=p&&v.x<=m&&v.y>=d&&v.y<=f&&v!==n&&v!==s&&eU(a,h,o,u,l,c,v.x,v.y)&&ej(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;y&&y.z>=g;){if(y.x>=p&&y.x<=m&&y.y>=d&&y.y<=f&&y!==n&&y!==s&&eU(a,h,o,u,l,c,y.x,y.y)&&ej(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;v&&v.z<=x;){if(v.x>=p&&v.x<=m&&v.y>=d&&v.y<=f&&v!==n&&v!==s&&eU(a,h,o,u,l,c,v.x,v.y)&&ej(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}(e,n,s,a):function(t){let e=t.prev,r=t.next;if(ej(e,t,r)>=0)return!1;let i=e.x,n=t.x,s=r.x,a=e.y,o=t.y,l=r.y,h=i<n?i<s?i:s:n<s?n:s,u=a<o?a<l?a:l:o<l?o:l,c=i>n?i>s?i:s:n>s?n:s,p=a>o?a>l?a:l:o>l?o:l,d=r.next;for(;d!==e;){if(d.x>=h&&d.x<=c&&d.y>=u&&d.y<=p&&eU(i,a,n,o,s,l,d.x,d.y)&&ej(d.prev,d,d.next)>=0)return!1;d=d.next}return!0}(e)){r.push(h.i/i|0),r.push(e.i/i|0),r.push(u.i/i|0),eX(e),e=u.next,l=u.next;continue}if((e=u)===l){o?1===o?t(e=function(t,e,r){let i=t;do{let n=i.prev,s=i.next.next;!eW(n,s)&&eq(n,i,i.next,s)&&eZ(n,s)&&eZ(s,n)&&(e.push(n.i/r|0),e.push(i.i/r|0),e.push(s.i/r|0),eX(i),eX(i.next),i=t=s),i=i.next}while(i!==t)return eB(i)}(eB(e),r,i),r,i,n,s,a,2):2===o&&function(e,r,i,n,s,a){let o=e;do{let e=o.next.next;for(;e!==o.prev;){var l,h;if(o.i!==e.i&&(l=o,h=e,l.next.i!==h.i&&l.prev.i!==h.i&&!function(t,e){let r=t;do{if(r.i!==t.i&&r.next.i!==t.i&&r.i!==e.i&&r.next.i!==e.i&&eq(r,r.next,t,e))return!0;r=r.next}while(r!==t)return!1}(l,h)&&(eZ(l,h)&&eZ(h,l)&&function(t,e){let r=t,i=!1,n=(t.x+e.x)/2,s=(t.y+e.y)/2;do r.y>s!=r.next.y>s&&r.next.y!==r.y&&n<(r.next.x-r.x)*(s-r.y)/(r.next.y-r.y)+r.x&&(i=!i),r=r.next;while(r!==t)return i}(l,h)&&(ej(l.prev,l,h.prev)||ej(l,h.prev,h))||eW(l,h)&&ej(l.prev,l,l.next)>0&&ej(h.prev,h,h.next)>0))){let l=eH(o,e);o=eB(o,o.next),l=eB(l,l.next),t(o,r,i,n,s,a,0),t(l,r,i,n,s,a,0);return}e=e.next}o=o.next}while(o!==e)}(e,r,i,n,s,a):t(eB(e),r,i,n,s,a,1);break}}}(p,d,r,i,n,h,0),d};function eV(t,e,r,i,n){let s,a;if(n===function(t,e,r,i){let n=0;for(let s=e,a=r-i;s<r;s+=i)n+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return n}(t,e,r,i)>0)for(s=e;s<r;s+=i)a=eY(s,t[s],t[s+1],a);else for(s=r-i;s>=e;s-=i)a=eY(s,t[s],t[s+1],a);return a&&eW(a,a.next)&&(eX(a),a=a.next),a}function eB(t,e){if(!t)return t;e||(e=t);let r=t,i;do if(i=!1,!r.steiner&&(eW(r,r.next)||0===ej(r.prev,r,r.next))){if(eX(r),(r=e=r.prev)===r.next)break;i=!0}else r=r.next;while(i||r!==e)return e}function eD(t,e){return t.x-e.x}function eF(t,e,r,i,n){return(t=((t=((t=((t=((t=(t-r)*n|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)|(e=((e=((e=((e=((e=(e-i)*n|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)<<1}function eU(t,e,r,i,n,s,a,o){return(n-a)*(e-o)>=(t-a)*(s-o)&&(t-a)*(i-o)>=(r-a)*(e-o)&&(r-a)*(s-o)>=(n-a)*(i-o)}function ej(t,e,r){return(e.y-t.y)*(r.x-e.x)-(e.x-t.x)*(r.y-e.y)}function eW(t,e){return t.x===e.x&&t.y===e.y}function eq(t,e,r,i){let n=eJ(ej(t,e,r)),s=eJ(ej(t,e,i)),a=eJ(ej(r,i,t)),o=eJ(ej(r,i,e));return!!(n!==s&&a!==o||0===n&&eG(t,r,e)||0===s&&eG(t,i,e)||0===a&&eG(r,t,i)||0===o&&eG(r,e,i))}function eG(t,e,r){return e.x<=Math.max(t.x,r.x)&&e.x>=Math.min(t.x,r.x)&&e.y<=Math.max(t.y,r.y)&&e.y>=Math.min(t.y,r.y)}function eJ(t){return t>0?1:t<0?-1:0}function eZ(t,e){return 0>ej(t.prev,t,t.next)?ej(t,e,t.next)>=0&&ej(t,t.prev,e)>=0:0>ej(t,e,t.prev)||0>ej(t,t.next,e)}function eH(t,e){let r=new eQ(t.i,t.x,t.y),i=new eQ(e.i,e.x,e.y),n=t.next,s=e.prev;return t.next=e,e.prev=t,r.next=n,n.prev=r,i.next=r,r.prev=i,s.next=i,i.prev=s,i}function eY(t,e,r,i){let n=new eQ(t,e,r);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function eX(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function eQ(t,e,r){this.i=t,this.x=e,this.y=r,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class eK{static area(t){let e=t.length,r=0;for(let i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y;return .5*r}static isClockWise(t){return 0>eK.area(t)}static triangulateShape(t,e){let r=[],i=[],n=[];e$(t),e0(r,t);let s=t.length;e.forEach(e$);for(let t=0;t<e.length;t++)i.push(s),s+=e[t].length,e0(r,e[t]);let a=eL(r,i);for(let t=0;t<a.length;t+=3)n.push(a.slice(t,t+3));return n}}function e$(t){let e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function e0(t,e){for(let r=0;r<e.length;r++)t.push(e[r].x),t.push(e[r].y)}class e1 extends er{constructor(t=new eR([new v(.5,.5),new v(-.5,.5),new v(-.5,-.5),new v(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];let r=this,i=[],n=[];for(let s=0,a=t.length;s<a;s++)!function(t){let s,a,o,l;let h=[],u=void 0!==e.curveSegments?e.curveSegments:12,c=void 0!==e.steps?e.steps:1,p=void 0!==e.depth?e.depth:1,d=void 0===e.bevelEnabled||e.bevelEnabled,m=void 0!==e.bevelThickness?e.bevelThickness:.2,f=void 0!==e.bevelSize?e.bevelSize:m-.1,g=void 0!==e.bevelOffset?e.bevelOffset:0,x=void 0!==e.bevelSegments?e.bevelSegments:3,y=e.extrudePath,_=void 0!==e.UVGenerator?e.UVGenerator:e2,b,w=!1;y&&(b=y.getSpacedPoints(c),w=!0,d=!1,s=y.computeFrenetFrames(c,!1),a=new D,o=new D,l=new D),d||(x=0,m=0,f=0,g=0);let M=t.extractPoints(u),S=M.shape,z=M.holes;if(!eK.isClockWise(S)){S=S.reverse();for(let t=0,e=z.length;t<e;t++){let e=z[t];eK.isClockWise(e)&&(z[t]=e.reverse())}}let A=eK.triangulateShape(S,z),C=S;for(let t=0,e=z.length;t<e;t++){let e=z[t];S=S.concat(e)}function T(t,e,r){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().addScaledVector(e,r)}let E=S.length,P=A.length;function k(t,e,r){let i,n,s;let a=t.x-e.x,o=t.y-e.y,l=r.x-t.x,h=r.y-t.y,u=a*a+o*o;if(Math.abs(a*h-o*l)>Number.EPSILON){let c=Math.sqrt(u),p=Math.sqrt(l*l+h*h),d=e.x-o/c,m=e.y+a/c,f=((r.x-h/p-d)*h-(r.y+l/p-m)*l)/(a*h-o*l),g=(i=d+a*f-t.x)*i+(n=m+o*f-t.y)*n;if(g<=2)return new v(i,n);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(h)&&(t=!0),t?(i=-o,n=a,s=Math.sqrt(u)):(i=a,n=o,s=Math.sqrt(u/2))}return new v(i/s,n/s)}let N=[];for(let t=0,e=C.length,r=e-1,i=t+1;t<e;t++,r++,i++)r===e&&(r=0),i===e&&(i=0),N[t]=k(C[t],C[r],C[i]);let O=[],I,R=N.concat();for(let t=0,e=z.length;t<e;t++){let e=z[t];I=[];for(let t=0,r=e.length,i=r-1,n=t+1;t<r;t++,i++,n++)i===r&&(i=0),n===r&&(n=0),I[t]=k(e[t],e[i],e[n]);O.push(I),R=R.concat(I)}for(let t=0;t<x;t++){let e=t/x,r=m*Math.cos(e*Math.PI/2),i=f*Math.sin(e*Math.PI/2)+g;for(let t=0,e=C.length;t<e;t++){let e=T(C[t],N[t],i);B(e.x,e.y,-r)}for(let t=0,e=z.length;t<e;t++){let e=z[t];I=O[t];for(let t=0,n=e.length;t<n;t++){let n=T(e[t],I[t],i);B(n.x,n.y,-r)}}}let L=f+g;for(let t=0;t<E;t++){let e=d?T(S[t],R[t],L):S[t];w?(o.copy(s.normals[0]).multiplyScalar(e.x),a.copy(s.binormals[0]).multiplyScalar(e.y),l.copy(b[0]).add(o).add(a),B(l.x,l.y,l.z)):B(e.x,e.y,0)}for(let t=1;t<=c;t++)for(let e=0;e<E;e++){let r=d?T(S[e],R[e],L):S[e];w?(o.copy(s.normals[t]).multiplyScalar(r.x),a.copy(s.binormals[t]).multiplyScalar(r.y),l.copy(b[t]).add(o).add(a),B(l.x,l.y,l.z)):B(r.x,r.y,p/c*t)}for(let t=x-1;t>=0;t--){let e=t/x,r=m*Math.cos(e*Math.PI/2),i=f*Math.sin(e*Math.PI/2)+g;for(let t=0,e=C.length;t<e;t++){let e=T(C[t],N[t],i);B(e.x,e.y,p+r)}for(let t=0,e=z.length;t<e;t++){let e=z[t];I=O[t];for(let t=0,n=e.length;t<n;t++){let n=T(e[t],I[t],i);w?B(n.x,n.y+b[c-1].y,b[c-1].x+r):B(n.x,n.y,p+r)}}}function V(t,e){let n=t.length;for(;--n>=0;){let s=n,a=n-1;a<0&&(a=t.length-1);for(let t=0,n=c+2*x;t<n;t++){let n=E*t,o=E*(t+1);!function(t,e,n,s){U(t),U(e),U(s),U(e),U(n),U(s);let a=i.length/3,o=_.generateSideWallUV(r,i,a-6,a-3,a-2,a-1);j(o[0]),j(o[1]),j(o[3]),j(o[1]),j(o[2]),j(o[3])}(e+s+n,e+a+n,e+a+o,e+s+o)}}}function B(t,e,r){h.push(t),h.push(e),h.push(r)}function F(t,e,n){U(t),U(e),U(n);let s=i.length/3,a=_.generateTopUV(r,i,s-3,s-2,s-1);j(a[0]),j(a[1]),j(a[2])}function U(t){i.push(h[3*t+0]),i.push(h[3*t+1]),i.push(h[3*t+2])}function j(t){n.push(t.x),n.push(t.y)}(function(){let t=i.length/3;if(d){let t=0*E;for(let e=0;e<P;e++){let r=A[e];F(r[2]+t,r[1]+t,r[0]+t)}t=E*(c+2*x);for(let e=0;e<P;e++){let r=A[e];F(r[0]+t,r[1]+t,r[2]+t)}}else{for(let t=0;t<P;t++){let e=A[t];F(e[2],e[1],e[0])}for(let t=0;t<P;t++){let e=A[t];F(e[0]+E*c,e[1]+E*c,e[2]+E*c)}}r.addGroup(t,i.length/3-t,0)})(),function(){let t=i.length/3,e=0;V(C,0),e+=C.length;for(let t=0,r=z.length;t<r;t++){let r=z[t];V(r,e),e+=r.length}r.addGroup(t,i.length/3-t,1)}()}(t[s]);this.setAttribute("position",new t5(i,3)),this.setAttribute("uv",new t5(n,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){let t=super.toJSON();return function(t,e,r){if(r.shapes=[],Array.isArray(t))for(let e=0,i=t.length;e<i;e++){let i=t[e];r.shapes.push(i.uuid)}else r.shapes.push(t.uuid);return r.options=Object.assign({},e),void 0!==e.extrudePath&&(r.options.extrudePath=e.extrudePath.toJSON()),r}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){let r=[];for(let i=0,n=t.shapes.length;i<n;i++){let n=e[t.shapes[i]];r.push(n)}let i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=new ez[i.type]().fromJSON(i)),new e1(r,t.options)}}let e2={generateTopUV:function(t,e,r,i,n){let s=e[3*r],a=e[3*r+1],o=e[3*i],l=e[3*i+1],h=e[3*n],u=e[3*n+1];return[new v(s,a),new v(o,l),new v(h,u)]},generateSideWallUV:function(t,e,r,i,n,s){let a=e[3*r],o=e[3*r+1],l=e[3*r+2],h=e[3*i],u=e[3*i+1],c=e[3*i+2],p=e[3*n],d=e[3*n+1],m=e[3*n+2],f=e[3*s],g=e[3*s+1],x=e[3*s+2];return Math.abs(o-u)<Math.abs(a-h)?[new v(a,1-l),new v(h,1-c),new v(p,1-m),new v(f,1-x)]:[new v(o,1-l),new v(u,1-c),new v(d,1-m),new v(g,1-x)]}};class e3 extends eO{constructor(t=1,e=0){let r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new e3(t.radius,t.detail)}}class e5 extends eO{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new e5(t.radius,t.detail)}}class e4 extends er{constructor(t=.5,e=1,r=32,i=1,n=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:s},r=Math.max(3,r);let a=[],o=[],l=[],h=[],u=t,c=(e-t)/(i=Math.max(1,i)),p=new D,d=new v;for(let t=0;t<=i;t++){for(let t=0;t<=r;t++){let i=n+t/r*s;p.x=u*Math.cos(i),p.y=u*Math.sin(i),o.push(p.x,p.y,p.z),l.push(0,0,1),d.x=(p.x/e+1)/2,d.y=(p.y/e+1)/2,h.push(d.x,d.y)}u+=c}for(let t=0;t<i;t++){let e=t*(r+1);for(let t=0;t<r;t++){let i=t+e,n=i+r+1,s=i+r+2,o=i+1;a.push(i,n,o),a.push(n,s,o)}}this.setIndex(a),this.setAttribute("position",new t5(o,3)),this.setAttribute("normal",new t5(l,3)),this.setAttribute("uv",new t5(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new e4(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class e6 extends er{constructor(t=new eR([new v(0,.5),new v(-.5,-.5),new v(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};let r=[],i=[],n=[],s=[],a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){let a=i.length/3,l=t.extractPoints(e),h=l.shape,u=l.holes;!1===eK.isClockWise(h)&&(h=h.reverse());for(let t=0,e=u.length;t<e;t++){let e=u[t];!0===eK.isClockWise(e)&&(u[t]=e.reverse())}let c=eK.triangulateShape(h,u);for(let t=0,e=u.length;t<e;t++){let e=u[t];h=h.concat(e)}for(let t=0,e=h.length;t<e;t++){let e=h[t];i.push(e.x,e.y,0),n.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=c.length;t<e;t++){let e=c[t],i=e[0]+a,n=e[1]+a,s=e[2]+a;r.push(i,n,s),o+=3}}this.setIndex(r),this.setAttribute("position",new t5(i,3)),this.setAttribute("normal",new t5(n,3)),this.setAttribute("uv",new t5(s,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){let t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let r=0,i=t.length;r<i;r++){let i=t[r];e.shapes.push(i.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){let r=[];for(let i=0,n=t.shapes.length;i<n;i++){let n=e[t.shapes[i]];r.push(n)}return new e6(r,t.curveSegments)}}class e7 extends er{constructor(t=1,e=32,r=16,i=0,n=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),r=Math.max(2,Math.floor(r));let o=Math.min(s+a,Math.PI),l=0,h=[],u=new D,c=new D,p=[],d=[],m=[],f=[];for(let p=0;p<=r;p++){let g=[],x=p/r,y=0;0===p&&0===s?y=.5/e:p===r&&o===Math.PI&&(y=-.5/e);for(let r=0;r<=e;r++){let o=r/e;u.x=-t*Math.cos(i+o*n)*Math.sin(s+x*a),u.y=t*Math.cos(s+x*a),u.z=t*Math.sin(i+o*n)*Math.sin(s+x*a),d.push(u.x,u.y,u.z),c.copy(u).normalize(),m.push(c.x,c.y,c.z),f.push(o+y,1-x),g.push(l++)}h.push(g)}for(let t=0;t<r;t++)for(let i=0;i<e;i++){let e=h[t][i+1],n=h[t][i],a=h[t+1][i],l=h[t+1][i+1];(0!==t||s>0)&&p.push(e,n,l),(t!==r-1||o<Math.PI)&&p.push(n,a,l)}this.setIndex(p),this.setAttribute("position",new t5(d,3)),this.setAttribute("normal",new t5(m,3)),this.setAttribute("uv",new t5(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new e7(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class e9 extends eO{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new e9(t.radius,t.detail)}}class e8 extends er{constructor(t=1,e=.4,r=12,i=48,n=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},r=Math.floor(r),i=Math.floor(i);let s=[],a=[],o=[],l=[],h=new D,u=new D,c=new D;for(let s=0;s<=r;s++)for(let p=0;p<=i;p++){let d=p/i*n,m=s/r*Math.PI*2;u.x=(t+e*Math.cos(m))*Math.cos(d),u.y=(t+e*Math.cos(m))*Math.sin(d),u.z=e*Math.sin(m),a.push(u.x,u.y,u.z),h.x=t*Math.cos(d),h.y=t*Math.sin(d),c.subVectors(u,h).normalize(),o.push(c.x,c.y,c.z),l.push(p/i),l.push(s/r)}for(let t=1;t<=r;t++)for(let e=1;e<=i;e++){let r=(i+1)*t+e-1,n=(i+1)*(t-1)+e-1,a=(i+1)*(t-1)+e,o=(i+1)*t+e;s.push(r,n,o),s.push(n,a,o)}this.setIndex(s),this.setAttribute("position",new t5(a,3)),this.setAttribute("normal",new t5(o,3)),this.setAttribute("uv",new t5(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new e8(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class rt extends er{constructor(t=1,e=.4,r=64,i=8,n=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:r,radialSegments:i,p:n,q:s},r=Math.floor(r),i=Math.floor(i);let a=[],o=[],l=[],h=[],u=new D,c=new D,p=new D,d=new D,m=new D,f=new D,g=new D;for(let a=0;a<=r;++a){let y=a/r*n*Math.PI*2;x(y,n,s,t,p),x(y+.01,n,s,t,d),f.subVectors(d,p),g.addVectors(d,p),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=i;++t){let n=t/i*Math.PI*2,s=-e*Math.cos(n),d=e*Math.sin(n);u.x=p.x+(s*g.x+d*m.x),u.y=p.y+(s*g.y+d*m.y),u.z=p.z+(s*g.z+d*m.z),o.push(u.x,u.y,u.z),c.subVectors(u,p).normalize(),l.push(c.x,c.y,c.z),h.push(a/r),h.push(t/i)}}for(let t=1;t<=r;t++)for(let e=1;e<=i;e++){let r=(i+1)*(t-1)+(e-1),n=(i+1)*t+(e-1),s=(i+1)*t+e,o=(i+1)*(t-1)+e;a.push(r,n,o),a.push(n,s,o)}function x(t,e,r,i,n){let s=Math.cos(t),a=Math.sin(t),o=r/e*t,l=Math.cos(o);n.x=i*(2+l)*.5*s,n.y=i*(2+l)*a*.5,n.z=i*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new t5(o,3)),this.setAttribute("normal",new t5(l,3)),this.setAttribute("uv",new t5(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new rt(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class re extends er{constructor(t=new eM(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),e=64,r=1,i=8,n=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:r,radialSegments:i,closed:n};let s=t.computeFrenetFrames(e,n);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;let a=new D,o=new D,l=new v,h=new D,u=[],c=[],p=[],d=[];function m(n){h=t.getPointAt(n/e,h);let l=s.normals[n],p=s.binormals[n];for(let t=0;t<=i;t++){let e=t/i*Math.PI*2,n=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+n*p.x,o.y=s*l.y+n*p.y,o.z=s*l.z+n*p.z,o.normalize(),c.push(o.x,o.y,o.z),a.x=h.x+r*o.x,a.y=h.y+r*o.y,a.z=h.z+r*o.z,u.push(a.x,a.y,a.z)}}(function(){for(let t=0;t<e;t++)m(t);m(!1===n?e:0),function(){for(let t=0;t<=e;t++)for(let r=0;r<=i;r++)l.x=t/e,l.y=r/i,p.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=i;e++){let r=(i+1)*(t-1)+(e-1),n=(i+1)*t+(e-1),s=(i+1)*t+e,a=(i+1)*(t-1)+e;d.push(r,n,a),d.push(n,s,a)}}()})(),this.setIndex(d),this.setAttribute("position",new t5(u,3)),this.setAttribute("normal",new t5(c,3)),this.setAttribute("uv",new t5(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){let t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new re(new ez[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}function rr(t,e,r){return t&&(r||t.constructor!==e)?"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t):t}class ri{constructor(t,e,r,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new e.constructor(r),this.sampleValues=e,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(t){let e=this.parameterPositions,r=this._cachedIndex,i=e[r],n=e[r-1];t:{e:{let s;r:{i:if(!(t<i)){for(let s=r+2;;){if(void 0===i){if(t<n)break i;return r=e.length,this._cachedIndex=r,this.copySampleValue_(r-1)}if(r===s)break;if(n=i,t<(i=e[++r]))break e}s=e.length;break r}if(!(t>=n)){let a=e[1];t<a&&(r=2,n=a);for(let s=r-2;;){if(void 0===n)return this._cachedIndex=0,this.copySampleValue_(0);if(r===s)break;if(i=n,t>=(n=e[--r-1]))break e}s=r,r=0;break r}break t}for(;r<s;){let i=r+s>>>1;t<e[i]?s=i:r=i+1}if(i=e[r],void 0===(n=e[r-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return r=e.length,this._cachedIndex=r,this.copySampleValue_(r-1)}this._cachedIndex=r,this.intervalChanged_(r,n,i)}return this.interpolate_(r,n,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){let e=this.resultBuffer,r=this.sampleValues,i=this.valueSize,n=t*i;for(let t=0;t!==i;++t)e[t]=r[n+t];return e}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class rn extends ri{constructor(t,e,r,i){super(t,e,r,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(t,e,r){let i=this.parameterPositions,n=t-2,s=t+1,a=i[n],o=i[s];if(void 0===a)switch(this.getSettings_().endingStart){case 2401:n=t,a=2*e-r;break;case 2402:n=i.length-2,a=e+i[n]-i[n+1];break;default:n=t,a=r}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:s=t,o=2*r-e;break;case 2402:s=1,o=r+i[1]-i[0];break;default:s=t-1,o=e}let l=(r-e)*.5,h=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-r),this._offsetPrev=n*h,this._offsetNext=s*h}interpolate_(t,e,r,i){let n=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,p=this._weightNext,d=(r-e)/(i-e),m=d*d,f=m*d,g=-c*f+2*c*m-c*d,x=(1+c)*f+(-1.5-2*c)*m+(-.5+c)*d+1,y=(-1-p)*f+(1.5+p)*m+.5*d,v=p*f-p*m;for(let t=0;t!==a;++t)n[t]=g*s[h+t]+x*s[l+t]+y*s[o+t]+v*s[u+t];return n}}class rs extends ri{constructor(t,e,r,i){super(t,e,r,i)}interpolate_(t,e,r,i){let n=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,h=(r-e)/(i-e),u=1-h;for(let t=0;t!==a;++t)n[t]=s[l+t]*u+s[o+t]*h;return n}}class ra extends ri{constructor(t,e,r,i){super(t,e,r,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class ro{constructor(t,e,r,i){if(void 0===t)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=rr(e,this.TimeBufferType),this.values=rr(r,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){let e;let r=t.constructor;if(r.toJSON!==this.toJSON)e=r.toJSON(t);else{e={name:t.name,times:rr(t.times,Array),values:rr(t.values,Array)};let r=t.getInterpolation();r!==t.DefaultInterpolation&&(e.interpolation=r)}return e.type=t.ValueTypeName,e}InterpolantFactoryMethodDiscrete(t){return new ra(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new rs(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new rn(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){let e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(e)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){let e=this.times;for(let r=0,i=e.length;r!==i;++r)e[r]+=t}return this}scale(t){if(1!==t){let e=this.times;for(let r=0,i=e.length;r!==i;++r)e[r]*=t}return this}trim(t,e){let r=this.times,i=r.length,n=0,s=i-1;for(;n!==i&&r[n]<t;)++n;for(;-1!==s&&r[s]>e;)--s;if(++s,0!==n||s!==i){n>=s&&(n=(s=Math.max(s,1))-1);let t=this.getValueSize();this.times=r.slice(n,s),this.values=this.values.slice(n*t,s*t)}return this}validate(){let t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);let r=this.times,i=this.values,n=r.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==n;e++){let i=r[e];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,i),t=!1;break}if(null!==s&&s>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,i,s),t=!1;break}s=i}if(void 0!==i&&ArrayBuffer.isView(i)&&!(i instanceof DataView))for(let e=0,r=i.length;e!==r;++e){let r=i[e];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,r),t=!1;break}}return t}optimize(){let t=this.times.slice(),e=this.values.slice(),r=this.getValueSize(),i=2302===this.getInterpolation(),n=t.length-1,s=1;for(let a=1;a<n;++a){let n=!1,o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0])){if(i)n=!0;else{let t=a*r,i=t-r,s=t+r;for(let a=0;a!==r;++a){let r=e[t+a];if(r!==e[i+a]||r!==e[s+a]){n=!0;break}}}}if(n){if(a!==s){t[s]=t[a];let i=a*r,n=s*r;for(let t=0;t!==r;++t)e[n+t]=e[i+t]}++s}}if(n>0){t[s]=t[n];for(let t=n*r,i=s*r,a=0;a!==r;++a)e[i+a]=e[t+a];++s}return s!==t.length?(this.times=t.slice(0,s),this.values=e.slice(0,s*r)):(this.times=t,this.values=e),this}clone(){let t=this.times.slice(),e=this.values.slice(),r=new this.constructor(this.name,t,e);return r.createInterpolant=this.createInterpolant,r}}ro.prototype.TimeBufferType=Float32Array,ro.prototype.ValueBufferType=Float32Array,ro.prototype.DefaultInterpolation=2301;class rl extends ro{constructor(t,e,r){super(t,e,r)}}rl.prototype.ValueTypeName="bool",rl.prototype.ValueBufferType=Array,rl.prototype.DefaultInterpolation=2300,rl.prototype.InterpolantFactoryMethodLinear=void 0,rl.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends ro{}).prototype.ValueTypeName="color",(class extends ro{}).prototype.ValueTypeName="number";class rh extends ri{constructor(t,e,r,i){super(t,e,r,i)}interpolate_(t,e,r,i){let n=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(r-e)/(i-e),l=t*a;for(let t=l+a;l!==t;l+=4)B.slerpFlat(n,0,s,l-a,s,l,o);return n}}class ru extends ro{InterpolantFactoryMethodLinear(t){return new rh(this.times,this.values,this.getValueSize(),t)}}ru.prototype.ValueTypeName="quaternion",ru.prototype.InterpolantFactoryMethodSmooth=void 0;class rc extends ro{constructor(t,e,r){super(t,e,r)}}rc.prototype.ValueTypeName="string",rc.prototype.ValueBufferType=Array,rc.prototype.DefaultInterpolation=2300,rc.prototype.InterpolantFactoryMethodLinear=void 0,rc.prototype.InterpolantFactoryMethodSmooth=void 0,(class extends ro{}).prototype.ValueTypeName="vector";let rp="\\[\\]\\.:\\/",rd=RegExp("["+rp+"]","g"),rm="[^"+rp+"]",rf="[^"+rp.replace("\\.","")+"]",rg=/((?:WC+[\/:])*)/.source.replace("WC",rm),rx=RegExp("^"+rg+/(WCOD+)?/.source.replace("WCOD",rf)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",rm)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",rm)+"$"),ry=["material","materials","bones","map"];class rv{constructor(t,e,r){this.path=e,this.parsedPath=r||rv.parseTrackName(e),this.node=rv.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,r){return t&&t.isAnimationObjectGroup?new rv.Composite(t,e,r):new rv(t,e,r)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(rd,"")}static parseTrackName(t){let e=rx.exec(t);if(null===e)throw Error("PropertyBinding: Cannot parse trackName: "+t);let r={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){let t=r.nodeName.substring(i+1);-1!==ry.indexOf(t)&&(r.nodeName=r.nodeName.substring(0,i),r.objectName=t)}if(null===r.propertyName||0===r.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+t);return r}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){let r=t.skeleton.getBoneByName(e);if(void 0!==r)return r}if(t.children){let r=function(t){for(let i=0;i<t.length;i++){let n=t[i];if(n.name===e||n.uuid===e)return n;let s=r(n.children);if(s)return s}return null},i=r(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){let r=this.resolvedProperty;for(let i=0,n=r.length;i!==n;++i)t[e++]=r[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){let r=this.resolvedProperty;for(let i=0,n=r.length;i!==n;++i)r[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){let r=this.resolvedProperty;for(let i=0,n=r.length;i!==n;++i)r[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){let r=this.resolvedProperty;for(let i=0,n=r.length;i!==n;++i)r[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node,e=this.parsedPath,r=e.objectName,i=e.propertyName,n=e.propertyIndex;if(t||(t=rv.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(r){let i=e.objectIndex;switch(r){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===i){i=e;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(void 0===t[r]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[r]}if(void 0!==i){if(void 0===t[i]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[i]}}let s=t[i];if(void 0===s){console.error("THREE.PropertyBinding: Trying to update property for track: "+e.nodeName+"."+i+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===i){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==t.morphTargetDictionary[n]&&(n=t.morphTargetDictionary[n])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=n}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}rv.Composite=class{constructor(t,e,r){let i=r||rv.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();let r=this._targetGroup.nCachedObjects_,i=this._bindings[r];void 0!==i&&i.getValue(t,e)}setValue(t,e){let r=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=r.length;i!==n;++i)r[i].setValue(t,e)}bind(){let t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].bind()}unbind(){let t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,r=t.length;e!==r;++e)t[e].unbind()}},rv.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},rv.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},rv.prototype.GetterByBindingType=[rv.prototype._getValue_direct,rv.prototype._getValue_array,rv.prototype._getValue_arrayElement,rv.prototype._getValue_toArray],rv.prototype.SetterByBindingTypeAndVersioning=[[rv.prototype._setValue_direct,rv.prototype._setValue_direct_setNeedsUpdate,rv.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[rv.prototype._setValue_array,rv.prototype._setValue_array_setNeedsUpdate,rv.prototype._setValue_array_setMatrixWorldNeedsUpdate],[rv.prototype._setValue_arrayElement,rv.prototype._setValue_arrayElement_setNeedsUpdate,rv.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[rv.prototype._setValue_fromArray,rv.prototype._setValue_fromArray_setNeedsUpdate,rv.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1),"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"165"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="165");var r_={};function rb(t,e,r){r=r||2;var i,n,s,a,o,l,h,u=e&&e.length,c=u?e[0]*r:t.length,p=rw(t,0,c,r,!0),d=[];if(!p||p.next===p.prev)return d;if(u&&(p=function(t,e,r,i){var n,s,a,o,l,h=[];for(n=0,s=e.length;n<s;n++)a=e[n]*i,o=n<s-1?e[n+1]*i:t.length,(l=rw(t,a,o,i,!1))===l.next&&(l.steiner=!0),h.push(function(t){var e=t,r=t;do(e.x<r.x||e.x===r.x&&e.y<r.y)&&(r=e),e=e.next;while(e!==t)return r}(l));for(h.sort(rS),n=0;n<h.length;n++)r=function(t,e){var r=function(t,e){var r,i,n,s=e,a=t.x,o=t.y,l=-1/0;do{if(o<=s.y&&o>=s.next.y&&s.next.y!==s.y){var h=s.x+(o-s.y)*(s.next.x-s.x)/(s.next.y-s.y);if(h<=a&&h>l&&(l=h,n=s.x<s.next.x?s:s.next,h===a))return n}s=s.next}while(s!==e)if(!n)return null;var u,c=n,p=n.x,d=n.y,m=1/0;s=n;do a>=s.x&&s.x>=p&&a!==s.x&&rA(o<d?a:l,o,p,d,o<d?l:a,o,s.x,s.y)&&(u=Math.abs(o-s.y)/(a-s.x),rN(s,t)&&(u<m||u===m&&(s.x>n.x||s.x===n.x&&(r=n,i=s,0>rC(r.prev,r,i.prev)&&0>rC(i.next,r,r.next))))&&(n=s,m=u)),s=s.next;while(s!==c)return n}(t,e);if(!r)return e;var i=rO(r,t);return rM(i,i.next),rM(r,r.next)}(h[n],r);return r}(t,e,p,r)),t.length>80*r){i=s=t[0],n=a=t[1];for(var m=r;m<c;m+=r)o=t[m],l=t[m+1],o<i&&(i=o),l<n&&(n=l),o>s&&(s=o),l>a&&(a=l);h=0!==(h=Math.max(s-i,a-n))?32767/h:0}return function t(e,r,i,n,s,a,o){if(e){!o&&a&&function(t,e,r,i){var n=t;do 0===n.z&&(n.z=rz(n.x,n.y,e,r,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==t)n.prevZ.nextZ=null,n.prevZ=null,function(t){var e,r,i,n,s,a,o,l,h=1;do{for(r=t,t=null,s=null,a=0;r;){for(a++,i=r,o=0,e=0;e<h&&(o++,i=i.nextZ);e++);for(l=h;o>0||l>0&&i;)0!==o&&(0===l||!i||r.z<=i.z)?(n=r,r=r.nextZ,o--):(n=i,i=i.nextZ,l--),s?s.nextZ=n:t=n,n.prevZ=s,s=n;r=i}s.nextZ=null,h*=2}while(a>1)}(n)}(e,n,s,a);for(var l,h,u=e;e.prev!==e.next;){if(l=e.prev,h=e.next,a?function(t,e,r,i){var n=t.prev,s=t.next;if(rC(n,t,s)>=0)return!1;for(var a=n.x,o=t.x,l=s.x,h=n.y,u=t.y,c=s.y,p=a<o?a<l?a:l:o<l?o:l,d=h<u?h<c?h:c:u<c?u:c,m=a>o?a>l?a:l:o>l?o:l,f=h>u?h>c?h:c:u>c?u:c,g=rz(p,d,e,r,i),x=rz(m,f,e,r,i),y=t.prevZ,v=t.nextZ;y&&y.z>=g&&v&&v.z<=x;){if(y.x>=p&&y.x<=m&&y.y>=d&&y.y<=f&&y!==n&&y!==s&&rA(a,h,o,u,l,c,y.x,y.y)&&rC(y.prev,y,y.next)>=0||(y=y.prevZ,v.x>=p&&v.x<=m&&v.y>=d&&v.y<=f&&v!==n&&v!==s&&rA(a,h,o,u,l,c,v.x,v.y)&&rC(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;y&&y.z>=g;){if(y.x>=p&&y.x<=m&&y.y>=d&&y.y<=f&&y!==n&&y!==s&&rA(a,h,o,u,l,c,y.x,y.y)&&rC(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;v&&v.z<=x;){if(v.x>=p&&v.x<=m&&v.y>=d&&v.y<=f&&v!==n&&v!==s&&rA(a,h,o,u,l,c,v.x,v.y)&&rC(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}(e,n,s,a):function(t){var e=t.prev,r=t.next;if(rC(e,t,r)>=0)return!1;for(var i=e.x,n=t.x,s=r.x,a=e.y,o=t.y,l=r.y,h=i<n?i<s?i:s:n<s?n:s,u=a<o?a<l?a:l:o<l?o:l,c=i>n?i>s?i:s:n>s?n:s,p=a>o?a>l?a:l:o>l?o:l,d=r.next;d!==e;){if(d.x>=h&&d.x<=c&&d.y>=u&&d.y<=p&&rA(i,a,n,o,s,l,d.x,d.y)&&rC(d.prev,d,d.next)>=0)return!1;d=d.next}return!0}(e)){r.push(l.i/i|0),r.push(e.i/i|0),r.push(h.i/i|0),rR(e),e=h.next,u=h.next;continue}if((e=h)===u){o?1===o?t(e=function(t,e,r){var i=t;do{var n=i.prev,s=i.next.next;!rT(n,s)&&rE(n,i,i.next,s)&&rN(n,s)&&rN(s,n)&&(e.push(n.i/r|0),e.push(i.i/r|0),e.push(s.i/r|0),rR(i),rR(i.next),i=t=s),i=i.next}while(i!==t)return rM(i)}(rM(e),r,i),r,i,n,s,a,2):2===o&&function(e,r,i,n,s,a){var o=e;do{for(var l,h,u=o.next.next;u!==o.prev;){if(o.i!==u.i&&(l=o,h=u,l.next.i!==h.i&&l.prev.i!==h.i&&!function(t,e){var r=t;do{if(r.i!==t.i&&r.next.i!==t.i&&r.i!==e.i&&r.next.i!==e.i&&rE(r,r.next,t,e))return!0;r=r.next}while(r!==t)return!1}(l,h)&&(rN(l,h)&&rN(h,l)&&function(t,e){var r=t,i=!1,n=(t.x+e.x)/2,s=(t.y+e.y)/2;do r.y>s!=r.next.y>s&&r.next.y!==r.y&&n<(r.next.x-r.x)*(s-r.y)/(r.next.y-r.y)+r.x&&(i=!i),r=r.next;while(r!==t)return i}(l,h)&&(rC(l.prev,l,h.prev)||rC(l,h.prev,h))||rT(l,h)&&rC(l.prev,l,l.next)>0&&rC(h.prev,h,h.next)>0))){var c=rO(o,u);o=rM(o,o.next),c=rM(c,c.next),t(o,r,i,n,s,a,0),t(c,r,i,n,s,a,0);return}u=u.next}o=o.next}while(o!==e)}(e,r,i,n,s,a):t(rM(e),r,i,n,s,a,1);break}}}}(p,d,r,i,n,h,0),d}function rw(t,e,r,i,n){var s,a;if(n===rV(t,e,r,i)>0)for(s=e;s<r;s+=i)a=rI(s,t[s],t[s+1],a);else for(s=r-i;s>=e;s-=i)a=rI(s,t[s],t[s+1],a);return a&&rT(a,a.next)&&(rR(a),a=a.next),a}function rM(t,e){if(!t)return t;e||(e=t);var r,i=t;do if(r=!1,!i.steiner&&(rT(i,i.next)||0===rC(i.prev,i,i.next))){if(rR(i),(i=e=i.prev)===i.next)break;r=!0}else i=i.next;while(r||i!==e)return e}function rS(t,e){return t.x-e.x}function rz(t,e,r,i,n){return(t=((t=((t=((t=((t=(t-r)*n|0)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)|(e=((e=((e=((e=((e=(e-i)*n|0)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)<<1}function rA(t,e,r,i,n,s,a,o){return(n-a)*(e-o)>=(t-a)*(s-o)&&(t-a)*(i-o)>=(r-a)*(e-o)&&(r-a)*(s-o)>=(n-a)*(i-o)}function rC(t,e,r){return(e.y-t.y)*(r.x-e.x)-(e.x-t.x)*(r.y-e.y)}function rT(t,e){return t.x===e.x&&t.y===e.y}function rE(t,e,r,i){var n=rk(rC(t,e,r)),s=rk(rC(t,e,i)),a=rk(rC(r,i,t)),o=rk(rC(r,i,e));return!!(n!==s&&a!==o||0===n&&rP(t,r,e)||0===s&&rP(t,i,e)||0===a&&rP(r,t,i)||0===o&&rP(r,e,i))}function rP(t,e,r){return e.x<=Math.max(t.x,r.x)&&e.x>=Math.min(t.x,r.x)&&e.y<=Math.max(t.y,r.y)&&e.y>=Math.min(t.y,r.y)}function rk(t){return t>0?1:t<0?-1:0}function rN(t,e){return 0>rC(t.prev,t,t.next)?rC(t,e,t.next)>=0&&rC(t,t.prev,e)>=0:0>rC(t,e,t.prev)||0>rC(t,t.next,e)}function rO(t,e){var r=new rL(t.i,t.x,t.y),i=new rL(e.i,e.x,e.y),n=t.next,s=e.prev;return t.next=e,e.prev=t,r.next=n,n.prev=r,i.next=r,r.prev=i,s.next=i,i.prev=s,i}function rI(t,e,r,i){var n=new rL(t,e,r);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function rR(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function rL(t,e,r){this.i=t,this.x=e,this.y=r,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function rV(t,e,r,i){for(var n=0,s=e,a=r-i;s<r;s+=i)n+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return n}(r_=rb).default=rb,rb.deviation=function(t,e,r,i){var n=e&&e.length,s=n?e[0]*r:t.length,a=Math.abs(rV(t,0,s,r));if(n)for(var o=0,l=e.length;o<l;o++){var h=e[o]*r,u=o<l-1?e[o+1]*r:t.length;a-=Math.abs(rV(t,h,u,r))}var c=0;for(o=0;o<i.length;o+=3){var p=i[o]*r,d=i[o+1]*r,m=i[o+2]*r;c+=Math.abs((t[p]-t[m])*(t[d+1]-t[p+1])-(t[p]-t[d])*(t[m+1]-t[p+1]))}return 0===a&&0===c?0:Math.abs((c-a)/a)},rb.flatten=function(t){for(var e=t[0][0].length,r={vertices:[],holes:[],dimensions:e},i=0,n=0;n<t.length;n++){for(var s=0;s<t[n].length;s++)for(var a=0;a<e;a++)r.vertices.push(t[n][s][a]);n>0&&(i+=t[n-1].length,r.holes.push(i))}return r};class rB extends n{constructor(t,e,i,n){super(t,e,i),n?this.vertices=n:this.vertices=this.json.vertices,this.geomData=new r(2)}clean(){this.geomData=new r(2)}flattenGeometry(t){let e=t.type;if("MultiSurface"==e||"CompositeSurface"==e)return t;if("Solid"==e){let e=Object.assign({},t);if(e.boundaries=t.boundaries.flat(1),t.semantics&&(e.semantics.values=t.semantics.values.flat(1)),t.material)for(let r in t.material)e.material[r].values=t.material[r].values.flat(1);if(t.texture)for(let r in t.texture)e.texture[r].values=t.texture[r].values.flat(1);return e}if("MultiSolid"==e||"CompositeSolid"==e){let e=Object.assign({},t);if(e.boundaries=t.boundaries.flat(2),t.semantics&&(e.semantics.values=t.semantics.values.flat(2)),t.material)for(let r in t.material)e.material[r].values=t.material[r].values.flat(2);if(t.texture)for(let r in t.texture)e.texture[r].values=t.texture[r].values.flat(2);return e}}parseGeometry(t,e,r){let i=this.json.CityObjects[e],n=i?this.getObjectIdx(e):-1,s=i?this.getObjectTypeIdx(i.type):-1,a=this.getLodIndex(t.lod),o=this.flattenGeometry(t);o&&this.parseShell(o,n,s,r,a)}parseShell(t,e,r,i,n){let s=t.boundaries,a=t.semantics?t.semantics.values:[],o=t.semantics?t.semantics.surfaces:[],l=t.material?t.material:{},h=t.texture?t.texture:{};for(let t=0;t<s.length;t++){let c=[],p=[],d=this.getSurfaceTypeIdx(t,a,o),m=this.getSurfaceMaterials(t,l);for(let e=0;e<s[t].length;e++)c.length>0&&p.push(c.length),c.push(...s[t][e]);if(3==c.length)for(let s=0;s<3;s++)this.geomData.addVertex(c[s],e,r,d,i,t,n,m,this.getTextureData(t,s,p,h));else if(c.length>3){var u;let s=[];for(let t=0;t<c.length;t++)s.push({x:this.vertices[c[t]][0],y:this.vertices[c[t]][1],z:this.vertices[c[t]][2]});let a=this.getNewellsNormal(s),o=[];for(let t=0;t<s.length;t++){let e=this.to_2d(s[t],a);o.push(e.x),o.push(e.y)}let l=((u=r_)&&u.__esModule?u.default:u)(o,p,2);for(let s=0;s<l.length;s+=3)for(let a=0;a<3;a++){let o=c[l[s+a]];this.geomData.addVertex(o,e,r,d,i,t,n,m,this.getTextureData(t,l[s+a],p,h))}}}}getNewellsNormal(t){let e=[0,0,0];for(let r=0;r<t.length;r++){let i=r+1;i==t.length&&(i=0),e[0]=e[0]+(t[r].y-t[i].y)*(t[r].z+t[i].z),e[1]=e[1]+(t[r].z-t[i].z)*(t[r].x+t[i].x),e[2]=e[2]+(t[r].x-t[i].x)*(t[r].y+t[i].y)}return new D(e[0],e[1],e[2]).normalize()}to_2d(t,e){t=new D(t.x,t.y,t.z);let r=new D(1.1,1.1,1.1);.01>r.distanceTo(e)&&r.add(new D(1,2,3));let i=r.dot(e),n=e.clone();n.multiplyScalar(i),r.sub(n),r.normalize();let s=e.clone();return s.cross(r),{x:t.dot(r),y:t.dot(s)}}}class rD{constructor(){this.matrix=null,this.chunkSize=2e3,this.lods=[],this.objectColors={},this.surfaceColors={},this.onchunkload=null,this.onComplete=null}parse(t){let e=0,r=[new rB(t,Object.keys(t.CityObjects),this.objectColors),new s(t,Object.keys(t.CityObjects),this.objectColors),new a(t,Object.keys(t.CityObjects),this.objectColors)];for(let i in t.CityObjects){let n=t.CityObjects[i];if(n.geometry&&n.geometry.length>0)for(let t=0;t<n.geometry.length;t++)for(let e of r)e.lods=this.lods,e.parseGeometry(n.geometry[t],i,t),this.lods=e.lods;if(e++>this.chunkSize){for(let e of r)this.returnObjects(e,t),e.clean();e=0}}for(let e of r)this.returnObjects(e,t),e.clean();this.objectColors=r[0].objectColors,this.surfaceColors=r[0].surfaceColors,this.onComplete&&this.onComplete()}returnObjects(t,e){t.geomData.count()>0&&this.onchunkload(t.geomData.getVertices(e.vertices),t.geomData.toObject(),t.lods,t.objectColors,t.surfaceColors)}}onmessage=function(t){let e=new rD,r=t.data[1];r&&(r.chunkSize&&(e.chunkSize=r.chunkSize),r.objectColors&&(e.objectColors=r.objectColors),r.lods&&(e.lods=r.lods)),e.onchunkload=(t,e,r,i,n)=>{let s=new Float32Array(t).buffer;postMessage({type:"chunkLoaded",v_buffer:s,geometryData:e,lods:r,objectColors:i,surfaceColors:n},[s])},e.onComplete=()=>{this.postMessage({type:"done"})},e.parse(t.data[0])}})();
//# sourceMappingURL=ParserWorker.9395b3db.js.map
